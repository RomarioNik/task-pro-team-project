{"version":3,"file":"static/js/135.677b7738.chunk.js","mappings":"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","sources":["components/Button/Button.jsx","webpack://task-pro-team-project/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","components/NewEditBoard/NewBoard.jsx","components/Svg/Icon.jsx","hooks/useShownBoard.js","hooks/useUserData.js","webpack://task-pro-team-project/./src/components/Board/Board.module.css?bad7","components/Board/Board.jsx","webpack://task-pro-team-project/./src/components/AddColumn/AddColumn.module.css?411c","components/AddColumn/AddColumn.jsx","webpack://task-pro-team-project/./src/components/EditColumn/EditColumn.module.css?94bf","components/EditColumn/EditColumn.jsx","webpack://task-pro-team-project/./src/components/calendar/calendar.module.css?9b5f","components/calendar/calendar.jsx","webpack://task-pro-team-project/./src/components/CreateCardPopUp/CreateCardPopUp.module.css?4a0a","components/CreateCardPopUp/CreateCardPopUp.jsx","webpack://task-pro-team-project/./src/components/Column/Column.module.css?790f","webpack://task-pro-team-project/./src/components/TaskCard/TaskCard.module.css?5c75","webpack://task-pro-team-project/./src/components/ChangeColumn/ChangeColumn.module.css?de6b","components/ChangeColumn/ChangeColumn.jsx","components/TaskCard/TaskCard.jsx","components/Column/Column.jsx","webpack://task-pro-team-project/./src/components/BoardCreated/BoardCreated.module.css?7c8e","components/BoardCreated/BoardCreated.jsx","webpack://task-pro-team-project/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://task-pro-team-project/./src/pages/ScreensPage/ScreensPage.module.css?186d","pages/ScreensPage/ScreensPage.jsx","redux/boards/boardsSelectors.js","webpack://task-pro-team-project/./src/components/NewEditBoard/NewBoard.module.css?7274"],"sourcesContent":["export const Button = ({\n  children,\n  type = 'click',\n  className,\n  handlerClick,\n  label,\n}) => {\n  // Компонент кнопка, для зміни типу кнопки передаємо проп type=\"value\"-string\n  // якщо необхідно стилізувати кнопку, передаем компоненту <Button className={your style }></Button>\n\n  return (\n    <button\n      type={type}\n      className={className}\n      onClick={handlerClick}\n      aria-label={label}\n    >\n      {children}\n    </button>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Modal_backdrop__xTnIT\",\"modal\":\"Modal_modal__DJDMv\",\"closeIcon\":\"Modal_closeIcon__9I0vC\",\"icon\":\"Modal_icon__2UpwH\"};","import React, { useEffect } from 'react';\nimport style from './Modal.module.css';\nimport sprite from '../../img/svg/sprite-icon.svg';\nimport { createPortal } from 'react-dom';\nimport { useUserData } from 'hooks/useUserData';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ children, openModal }) => {\n  const { userTheme } = useUserData();\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        openModal();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [openModal]);\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      openModal();\n    }\n  };\n\n  return createPortal(\n    <div\n      className={style.backdrop}\n      onClick={handleBackdropClick}\n      data-theme={userTheme}\n    >\n      <div className={style.modal}>\n        <button\n          type=\"button\"\n          className={style.closeIcon}\n          onClick={() => openModal()}\n        >\n          <svg className={style.icon}>\n            <use href={sprite + '#plus'} />\n          </svg>\n        </button>\n        {children}\n      </div>\n    </div>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n\n// =================for testing============================================================================\n\n//  const [openModal, setOpenModal] = useState(false)\n\n//     <>\n//         <p onClick={() => setOpenModal(true)}>Open</p>\n//         {openModal && <Modal children={<YOU MODAL COMPONENT/>} openModal={setOpenModal} />}\n//     </>\n","import { Icon } from '../Svg/Icon';\nimport styles from './NewBoard.module.css';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router';\nimport { addBoard } from 'redux/boards/boardsOperations';\n\nimport noBack from '../../img/background_list_icons/no-background.jpg';\nimport cappodocia from '../../img/background_list_icons/cappodocia.jpg';\nimport baloon from '../../img/background_list_icons/baloon.jpg';\nimport clouds from '../../img/background_list_icons/clouds.jpg';\nimport fullMoon from '../../img/background_list_icons/full-moon.jpg';\nimport halfMoon from '../../img/background_list_icons/half-moon.jpg';\nimport magnolia from '../../img/background_list_icons/magnolia.jpg';\nimport mountains from '../../img/background_list_icons/mountains.jpg';\nimport nightTrailer from '../../img/background_list_icons/night-trailer.jpg';\nimport palmLeaves from '../../img/background_list_icons/palm-leaves.jpg';\nimport rockyBeach from '../../img/background_list_icons/rocky-beach.jpg';\nimport sakura from '../../img/background_list_icons/sakura.jpg';\nimport sea from '../../img/background_list_icons/sea.jpg';\nimport starrySky from '../../img/background_list_icons/starry-sky.jpg';\nimport violetCircle from '../../img/background_list_icons/violet-circle.jpg';\nimport yacht from '../../img/background_list_icons/yacht.jpg';\n\nconst NewBoard = ({ openModal }) => {\n  const [icons, setIcons] = useState('project');\n  const [background, setBackground] = useState('no-background');\n  const [title, setTitle] = useState(null);\n\n  const navigate = useNavigate();\n\n  const dispatch = useDispatch();\n  const getTitle = event => {\n    setTitle(event.target.value);\n  };\n\n  const closeModal = event => {\n    openModal();\n  };\n\n  const getIcon = event => {\n    setIcons(event.currentTarget.dataset.source);\n    console.log(icons);\n  };\n\n  const getBack = event => {\n    console.log(event.currentTarget.dataset.source);\n    setBackground(event.currentTarget.dataset.source);\n  };\n\n  const newBoardObject = {\n    title: title,\n    icon: icons,\n    background: background,\n  };\n\n  const newBoardFunc = () => {\n    dispatch(addBoard(newBoardObject));\n    closeModal();\n    navigate(`${title}`);\n  };\n\n  return (\n    <div className={styles.divCard}>\n      <h2 className={styles.textNew}>New board</h2>\n      <input\n        className={styles.titleInput}\n        type=\"text\"\n        placeholder=\"Title\"\n        onChange={getTitle}\n      />\n      <h3 className={styles.textIcons}>Icons</h3>\n      <ul className={styles.listDarkIcons}>\n        <li>\n          {/* <button\n            data-source=\"project\"\n            className={styles.buttonIcons}\n            onClick={getIcon}\n          > */}\n          <input\n            type=\"radio\"\n            data-source=\"project\"\n            name=\"buttons\"\n            className={styles.inputRad}\n            onClick={getIcon}\n          />\n          <Icon\n            id={'project'}\n            className={icons === 'project' ? styles.darkIcons : styles.serIcons}\n          ></Icon>\n        </li>\n        <li>\n          <input\n            type=\"radio\"\n            data-source=\"star\"\n            name=\"buttons\"\n            className={styles.inputRad}\n            onClick={getIcon}\n          />\n          <Icon\n            id={'star'}\n            className={icons === 'star' ? styles.darkIcons : styles.serIcons}\n          ></Icon>\n        </li>\n        <li>\n          <input\n            type=\"radio\"\n            data-source=\"loading\"\n            name=\"buttons\"\n            className={styles.inputRad}\n            onClick={getIcon}\n          />\n          <Icon\n            id={'loading'}\n            className={icons === 'loading' ? styles.darkIcons : styles.serIcons}\n          ></Icon>\n        </li>\n        <li>\n          <input\n            type=\"radio\"\n            data-source=\"puzzle-piece\"\n            name=\"buttons\"\n            className={styles.inputRad}\n            onClick={getIcon}\n          />\n          <Icon\n            id={'puzzle-piece'}\n            className={\n              icons === 'puzzle-piece' ? styles.darkIcons : styles.serIcons\n            }\n          ></Icon>\n        </li>\n        <li>\n          <input\n            type=\"radio\"\n            data-source=\"container\"\n            name=\"buttons\"\n            className={styles.inputRad}\n            onClick={getIcon}\n          />\n          <Icon\n            id={'container'}\n            className={\n              icons === 'container' ? styles.darkIcons : styles.serIcons\n            }\n          ></Icon>\n        </li>\n        <li>\n          <input\n            type=\"radio\"\n            data-source=\"lightning\"\n            name=\"buttons\"\n            className={styles.inputRad}\n            onClick={getIcon}\n          />\n          <Icon\n            id={'lightning'}\n            className={\n              icons === 'lightning' ? styles.darkIcons : styles.serIcons\n            }\n          ></Icon>\n        </li>\n        <li>\n          <input\n            type=\"radio\"\n            data-source=\"colors\"\n            name=\"buttons\"\n            className={styles.inputRad}\n            onClick={getIcon}\n          />\n          <Icon\n            id={'colors'}\n            className={icons === 'colors' ? styles.darkIcons : styles.serIcons}\n          ></Icon>\n        </li>\n        <li>\n          <input\n            type=\"radio\"\n            data-source=\"hexagon\"\n            name=\"buttons\"\n            className={styles.inputRad}\n            onClick={getIcon}\n          />\n          <Icon\n            id={'hexagon'}\n            className={icons === 'hexagon' ? styles.darkIcons : styles.serIcons}\n          ></Icon>\n        </li>\n      </ul>\n      <h3 className={styles.textBackground}>Background</h3>\n      <ul className={styles.listColorIcons}>\n        <li\n          className={\n            background === 'no-background'\n              ? styles.listItemActive\n              : styles.listItem\n          }\n        >\n          <input\n            type=\"radio\"\n            name=\"backs\"\n            data-source=\"no-background\"\n            className={styles.inputBack}\n            onClick={getBack}\n          />\n          <img src={noBack} alt=\"noback\" className={styles.img_back} />\n        </li>\n        <li\n          className={\n            background === 'magnolia' ? styles.listItemActive : styles.listItem\n          }\n        >\n          <input\n            type=\"radio\"\n            name=\"backs\"\n            className={styles.inputBack}\n            data-source=\"magnolia\"\n            onClick={getBack}\n          />\n          <img src={magnolia} alt=\"magnolia\" className={styles.img_back} />\n        </li>\n        <li\n          className={\n            background === 'starry-sky'\n              ? styles.listItemActive\n              : styles.listItem\n          }\n        >\n          <input\n            type=\"radio\"\n            name=\"backs\"\n            className={styles.inputBack}\n            data-source=\"starry-sky\"\n            onClick={getBack}\n          />\n          <img src={starrySky} alt=\"starrySky\" className={styles.img_back} />\n        </li>\n        <li\n          className={\n            background === 'sakura' ? styles.listItemActive : styles.listItem\n          }\n        >\n          <input\n            type=\"radio\"\n            name=\"backs\"\n            className={styles.inputBack}\n            data-source=\"sakura\"\n            onClick={getBack}\n          />\n          <img src={sakura} alt=\"sakura\" className={styles.img_back} />\n        </li>\n        <li\n          className={\n            background === 'half-moon' ? styles.listItemActive : styles.listItem\n          }\n        >\n          <input\n            type=\"radio\"\n            name=\"backs\"\n            className={styles.inputBack}\n            data-source=\"half-moon\"\n            onClick={getBack}\n          />\n          <img src={halfMoon} alt=\"half-moon\" className={styles.img_back} />\n        </li>\n        <li\n          className={\n            background === 'palm-leaves'\n              ? styles.listItemActive\n              : styles.listItem\n          }\n        >\n          <input\n            type=\"radio\"\n            name=\"backs\"\n            className={styles.inputBack}\n            data-source=\"palm-leaves\"\n            onClick={getBack}\n          />\n          <img src={palmLeaves} alt=\"palm-leaves\" className={styles.img_back} />\n        </li>\n        <li\n          className={\n            background === 'clouds' ? styles.listItemActive : styles.listItem\n          }\n        >\n          <input\n            type=\"radio\"\n            name=\"backs\"\n            className={styles.inputBack}\n            data-source=\"clouds\"\n            onClick={getBack}\n          />\n          <img src={clouds} alt=\"clouds\" className={styles.img_back} />\n        </li>\n        <li\n          className={\n            background === 'rocky-beach'\n              ? styles.listItemActive\n              : styles.listItem\n          }\n        >\n          <input\n            type=\"radio\"\n            name=\"backs\"\n            className={styles.inputBack}\n            data-source=\"rocky-beach\"\n            onClick={getBack}\n          />\n          <img src={rockyBeach} alt=\"rocky-beach\" className={styles.img_back} />\n        </li>\n        <li\n          className={\n            background === 'violet-circle'\n              ? styles.listItemActive\n              : styles.listItem\n          }\n        >\n          <input\n            type=\"radio\"\n            name=\"backs\"\n            className={styles.inputBack}\n            data-source=\"violet-circle\"\n            onClick={getBack}\n          />\n          <img\n            src={violetCircle}\n            alt=\"violet-circle\"\n            className={styles.img_back}\n          />\n        </li>\n        <li\n          className={\n            background === 'full-moon' ? styles.listItemActive : styles.listItem\n          }\n        >\n          <input\n            type=\"radio\"\n            name=\"backs\"\n            className={styles.inputBack}\n            data-source=\"full-moon\"\n            onClick={getBack}\n          />\n          <img src={fullMoon} alt=\"full-moon\" className={styles.img_back} />\n        </li>\n        <li\n          className={\n            background === 'yacht' ? styles.listItemActive : styles.listItem\n          }\n        >\n          <input\n            type=\"radio\"\n            name=\"backs\"\n            className={styles.inputBack}\n            data-source=\"yacht\"\n            onClick={getBack}\n          />\n          <img src={yacht} alt=\"yacht\" className={styles.img_back} />\n        </li>\n        <li\n          className={\n            background === 'baloon' ? styles.listItemActive : styles.listItem\n          }\n        >\n          <input\n            type=\"radio\"\n            name=\"backs\"\n            className={styles.inputBack}\n            data-source=\"baloon\"\n            onClick={getBack}\n          />\n          <img src={baloon} alt=\"baloon\" className={styles.img_back} />\n        </li>\n        <li\n          className={\n            background === 'mountains' ? styles.listItemActive : styles.listItem\n          }\n        >\n          <input\n            type=\"radio\"\n            name=\"backs\"\n            className={styles.inputBack}\n            data-source=\"mountains\"\n            onClick={getBack}\n          />\n          <img src={mountains} alt=\"mountains\" className={styles.img_back} />\n        </li>\n        <li\n          className={\n            background === 'sea' ? styles.listItemActive : styles.listItem\n          }\n        >\n          <input\n            type=\"radio\"\n            name=\"backs\"\n            className={styles.inputBack}\n            data-source=\"sea\"\n            onClick={getBack}\n          />\n          <img src={sea} alt=\"sea\" className={styles.img_back} />\n        </li>\n        <li\n          className={\n            background === 'cappodocia'\n              ? styles.listItemActive\n              : styles.listItem\n          }\n        >\n          <input\n            type=\"radio\"\n            name=\"backs\"\n            className={styles.inputBack}\n            data-source=\"cappodocia\"\n            onClick={getBack}\n          />\n          <img src={cappodocia} alt=\"cappodocia\" className={styles.img_back} />\n        </li>\n        <li\n          className={\n            background === 'night-trailer'\n              ? styles.listItemActive\n              : styles.listItem\n          }\n        >\n          <input\n            type=\"radio\"\n            name=\"backs\"\n            className={styles.inputBack}\n            data-source=\"night-trailer\"\n            onClick={getBack}\n          />\n          <img\n            src={nightTrailer}\n            alt=\"night-trailer\"\n            className={styles.img_back}\n          />\n        </li>\n      </ul>\n      <button className={styles.mainButton} onClick={newBoardFunc}>\n        <div className={styles.plusBtnZaglushka}>\n          <Icon id={'plus'} className={styles.plusIcon}></Icon>\n        </div>\n        Create\n      </button>\n    </div>\n  );\n};\n\nexport default NewBoard;\n","import React from 'react';\nimport Icons from '../../img/svg/sprite-icon.svg';\n\nexport const Icon = ({ id, className }) => {\n  return (\n    <svg className={className}>\n      <use href={Icons + '#' + id}></use>\n    </svg>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectShownBoard } from 'redux/boards/boardsSelectors';\n\nexport const useShownBoard = () => useSelector(selectShownBoard);\n","import { useSelector } from 'react-redux';\nimport { selectUserData } from 'redux/auth/selectors';\n\nexport const useUserData = () => useSelector(selectUserData);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Board_container__pIXhe\",\"button_create\":\"Board_button_create__B+-vo\"};","import React, { useState } from 'react';\nimport Modal from 'components/Modal';\nimport NewBoard from 'components/NewEditBoard/NewBoard';\nimport style from './Board.module.css';\n\nconst Board = () => {\n  const [openNewBoardModal, setOpenEditBoardModal] = useState(false);\n\n  const openModal = () => {\n    setOpenEditBoardModal(true);\n  };\n  return (\n    <div className={style.container}>\n      Before starting your project, it is essential{' '}\n      <button type=\"button\" className={style.button_create} onClick={openModal}>\n        {' '}\n        to create a board{' '}\n      </button>{' '}\n      to visualize and track all the necessary tasks and milestones. This board\n      serves as a powerful tool to organize the workflow and ensure effective\n      collaboration among team members.\n      <div>\n        {openNewBoardModal && (\n          <Modal openModal={setOpenEditBoardModal}>\n            <NewBoard />\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Board;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"AddColumn_container__UkDYo\",\"addColumn_title\":\"AddColumn_addColumn_title__98nSr\",\"addColumn_input\":\"AddColumn_addColumn_input__KkQHG\",\"addColumn_btn\":\"AddColumn_addColumn_btn__GsLPy\",\"iconWrap\":\"AddColumn_iconWrap__EAPH6\",\"icon\":\"AddColumn_icon__yKwvv\"};","import { Button } from 'components/Button/Button';\nimport css from './AddColumn.module.css';\nimport { Icon } from 'components/Svg/Icon';\nimport { useDispatch } from 'react-redux';\nimport { addColumn } from 'redux/boards/boardsOperations';\n// import { useParams } from 'react-router-dom';\nimport { useShownBoard } from 'hooks/useShownBoard';\n// import { useNavigate } from 'react-router';\n// import { useBoardsList } from 'hooks/useBoardsList';\n\nconst AddColumn = ({ closeModal }) => {\n    // const navigate = useNavigate();\n  // const board = useParams(); //необхідно отримати id дошки!\n  const { _id: shownBoardId } = useShownBoard();\n\n  const dispatch = useDispatch();\n  const handlerTitleColumn = evt => {\n    evt.preventDefault();\n    const inputValue = evt.target.title.value.trim();\n    if (inputValue !== '') {\n      // console.log(currentBoard);\n      const newColumn = {\n        title: inputValue,\n        board: shownBoardId, // необхідно передати id дошки!!\n      };\n      dispatch(addColumn(newColumn));\n      // navigate(`${newColumn.title}`);\n      closeModal();\n      return;\n    }\n\n    return;\n  };\n  return (\n    <div className={css.container}>\n      <p className={css.addColumn_title}>Add column</p>\n      <form onSubmit={handlerTitleColumn}>\n        <input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Title\"\n          className={css.addColumn_input}\n          autoFocus\n        />\n        <Button type=\"submit\" className={css.addColumn_btn}>\n          <span className={css.iconWrap}>\n            <Icon id={'icon-plus'} className={css.icon} />\n          </span>\n          Add\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default AddColumn;\n// проверить инпут, что бы не был пустым + метод trim()\n\n// import { Button } from 'components/Button/Button';\n// import css from './AddColumn.module.css';\n// import { Icon } from 'components/Svg/Icon';\n// import { useDispatch } from 'react-redux';\n// import { addColumn } from 'redux/boards/boardsOperations';\n// import { useParams } from 'react-router-dom';\n\n// const AddColumn = () => {\n//   const board = useParams(); //необхідно отримати id дошки!\n//   const dispatch = useDispatch();\n//   const handlerTitleColumn = evt => {\n//     evt.preventDefault();\n//     const inputValue = evt.target.title.value.trim();\n//     if (inputValue !== '') {\n//       console.log(board);\n//       const newColumn = {\n//         title: inputValue,\n//         board: '', // необхідно передати id дошки!!\n//       };\n//       dispatch(addColumn(newColumn));\n//       return;\n//     }\n\n//     return;\n//   };\n//   return (\n//     <div className={css.container}>\n//       <p className={css.addColumn_title}>Add column</p>\n//       <form onSubmit={handlerTitleColumn}>\n//         <input\n//           type=\"text\"\n//           name=\"title\"\n//           placeholder=\"Title\"\n//           className={css.addColumn_input}\n//           autoFocus\n//         />\n//         <Button type=\"submit\" className={css.addColumn_btn}>\n//           <span className={css.iconWrap}>\n//             <Icon id={'icon-plus'} className={css.icon} />\n//           </span>\n//           Add\n//         </Button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default AddColumn;\n// // проверить инпут, что бы не был пустым + метод trim()\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"EditColumn_container__8H9C0\",\"editColumn_title\":\"EditColumn_editColumn_title__xqG23\",\"editColumn_input\":\"EditColumn_editColumn_input__zSQiS\",\"editColumn_btn\":\"EditColumn_editColumn_btn__Mxw7B\",\"iconWrap\":\"EditColumn_iconWrap__3A8S4\",\"icon\":\"EditColumn_icon__Bnnnf\"};","import { Button } from 'components/Button/Button';\nimport css from './EditColumn.module.css';\nimport { Icon } from 'components/Svg/Icon';\nimport { useDispatch } from 'react-redux';\nimport { updateColumnById } from 'redux/boards/boardsOperations';\nimport { useShownBoard } from 'hooks/useShownBoard';\nimport { useState } from 'react';\n\nconst EditColumn = ({ id, close }) => {\n  const { title } = useShownBoard().columns.find(({ _id }) => _id === id);\n  const { _id } = useShownBoard();\n  const [editColumnValue, setEditColumnValue] = useState(title);\n\n  const dispatch = useDispatch();\n\n  const handlerEditColumn = evt => {\n    evt.preventDefault();\n\n    const editColumn = {\n      _id: id,\n      newColumnData: {\n        title: editColumnValue,\n        board: _id,\n      },\n    };\n\n    if (editColumnValue.trim() !== '') {\n      dispatch(updateColumnById(editColumn));\n      close();\n    }\n    return;\n  };\n\n  const handlerValue = ({ target }) => setEditColumnValue(target.value);\n  return (\n    <div className={css.container}>\n      <p className={css.editColumn_title}>Edit column</p>\n      <form onSubmit={handlerEditColumn}>\n        <input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Title\"\n          className={css.editColumn_input}\n          autoFocus\n          value={editColumnValue}\n          onChange={handlerValue}\n        />\n        <Button\n          type=\"submit\"\n          className={css.editColumn_btn}\n          onSubmit={handlerEditColumn}\n        >\n          <span className={css.iconWrap}>\n            <Icon id={'icon-plus'} className={css.icon} />\n          </span>\n          Add\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default EditColumn;\n","// extracted by mini-css-extract-plugin\nexport default {\"myButton\":\"calendar_myButton__whxcC\",\"chevronDownContainer\":\"calendar_chevronDownContainer__aUYsD\",\"chevronDown\":\"calendar_chevronDown__zYq4Y\",\"rotate\":\"calendar_rotate__ZnRYM\"};","import * as React from 'react';\nimport { Button, Stack } from '@mui/material';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { format } from 'date-fns';\nimport dayjs from 'dayjs';\nimport { useState } from 'react';\n\nimport css from './calendar.module.css';\nimport sprite from '../../img/svg/sprite-icon.svg';\n\nimport { useUserData } from 'hooks/useUserData';\n\nfunction ButtonField(props) {\n  const { userTheme } = useUserData();\n\n  const calendarBtnThemChenger = userTheme => {\n    switch (userTheme) {\n      case 'light':\n        return '#bedbb0';\n      case 'dark':\n        return '#bedbb0';\n      case 'violet':\n        return '#5255bc';\n      default:\n        return '#bedbb0';\n    }\n  };\n  const [theme, setTheme] = useState(calendarBtnThemChenger(userTheme));\n\n  React.useEffect(() => {\n    const newTheme = calendarBtnThemChenger(userTheme);\n    setTheme(newTheme);\n  }, [userTheme]);\n\n  const {\n    setOpen,\n    label,\n    id,\n    disabled,\n    open,\n    InputProps: { ref } = {},\n    inputProps: { 'aria-label': ariaLabel } = {},\n  } = props;\n\n  return (\n    <Button\n      sx={{\n        margin: 0,\n        padding: 0,\n        color: theme,\n        textTransform: 'inherit',\n        fontSize: '16px',\n        justifyContent: 'left',\n        align: 'center',\n      }}\n      id={id}\n      disabled={disabled}\n      ref={ref}\n      aria-label={ariaLabel}\n      onClick={() => setOpen?.(prev => !prev)}\n      className={css.myButton}\n    >\n      {label ?? 'Pick a date'}{' '}\n      <span className={css.chevronDownContainer}>\n        <svg className={`${css.chevronDown} ${open ? css.rotate : ''}`}>\n          <use xlinkHref={`${sprite}#chevron-down`} />\n        </svg>\n      </span>\n    </Button>\n  );\n}\n\nfunction ButtonDatePicker(props) {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <DatePicker\n      showDaysOutsideCurrentMonth\n      slots={{ field: ButtonField, ...props.slots }}\n      slotProps={{ field: { setOpen, open } }}\n      {...props}\n      open={open}\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n    />\n  );\n}\n\nexport function Calendar({ setFormattedDeadline, isEditing, deadline }) {\n  const [deadlineDate, setdDeadlineDate] = useState(null);\n  const [sameDay, setsameDay] = useState(false);\n  const today = dayjs();\n\n  if (deadlineDate === null) {\n    setFormattedDeadline(format(today.$d, 'dd-MM-yyyy'));\n  }\n\n  const chooseDeadlineDate = newValue => {\n    const choisedDate = new Date(newValue.$d);\n\n    setFormattedDeadline(format(choisedDate, 'dd-MM-yyyy'));\n\n    const isSameDay = dayjs(choisedDate).isSame(today, 'day');\n    setdDeadlineDate(choisedDate);\n\n    if (isSameDay) {\n      setsameDay(true);\n    } else if (!isSameDay) {\n      setsameDay(false);\n    }\n  };\n\n  return (\n    <LocalizationProvider dateAdapter={AdapterDayjs}>\n      <Stack spacing={1}>\n        <ButtonDatePicker\n          label={`${\n            deadlineDate == null\n              ? `Today, ${today.format('MMMM D')}`\n              : sameDay\n              ? `Today, ${format(deadlineDate, 'MMMM d')}`\n              : format(deadlineDate, 'MM/dd/yyyy')\n          }`}\n          disablePast\n          onChange={chooseDeadlineDate}\n          className={css.myButton}\n        />\n      </Stack>\n    </LocalizationProvider>\n  );\n}\n\nexport default Calendar;\n","// extracted by mini-css-extract-plugin\nexport default {\"modalTitle\":\"CreateCardPopUp_modalTitle__pwMeE\",\"inputForm\":\"CreateCardPopUp_inputForm__Kme0S\",\"inputCardTitle\":\"CreateCardPopUp_inputCardTitle__59BCf\",\"inputCardDescription\":\"CreateCardPopUp_inputCardDescription__wTAE0\",\"inputLabelColor\":\"CreateCardPopUp_inputLabelColor__4S1yh\",\"inputLabelColorContainer\":\"CreateCardPopUp_inputLabelColorContainer__SnVVr\",\"deadlineTitle\":\"CreateCardPopUp_deadlineTitle__xYx71\",\"inputAddBtn\":\"CreateCardPopUp_inputAddBtn__U+hbj\",\"deadlineContainer\":\"CreateCardPopUp_deadlineContainer__ozW6c\",\"plusIconContainer\":\"CreateCardPopUp_plusIconContainer__Zb+mh\",\"plusIcon\":\"CreateCardPopUp_plusIcon__3OERq\",\"customRadio\":\"CreateCardPopUp_customRadio__ReqDP\",\"hiddenRadio\":\"CreateCardPopUp_hiddenRadio__HwivD\",\"customIcon\":\"CreateCardPopUp_customIcon__lE15B\",\"customIconcheked\":\"CreateCardPopUp_customIconcheked__vW0JP\",\"customIconUncheckedWithout\":\"CreateCardPopUp_customIconUncheckedWithout__Vk-U8\",\"customIconchekedwithout\":\"CreateCardPopUp_customIconchekedwithout__kD3Vg\",\"customIconUncheckedLow\":\"CreateCardPopUp_customIconUncheckedLow__98m6t\",\"customIconchekedlow\":\"CreateCardPopUp_customIconchekedlow__jBn7h\",\"customIconchekedmedium\":\"CreateCardPopUp_customIconchekedmedium__HVpAv\",\"customIconUncheckedmedium\":\"CreateCardPopUp_customIconUncheckedmedium__hUH3A\",\"customIconchekedhigh\":\"CreateCardPopUp_customIconchekedhigh__v7bDS\",\"customIconUncheckedHigh\":\"CreateCardPopUp_customIconUncheckedHigh__xvhxa\",\"radioBtnContainer\":\"CreateCardPopUp_radioBtnContainer__FVhEZ\"};","import Calendar from 'components/calendar/calendar';\nimport css from './CreateCardPopUp.module.css';\nimport { useState } from 'react';\n\nimport sprite from '../../img/svg/sprite-icon.svg';\nimport { useDispatch } from 'react-redux';\nimport { addCard, updateCardById } from 'redux/boards/boardsOperations';\n\nexport function CreateCardPopUp({\n  _id,\n  column,\n  isEditing,\n  initialValues,\n  close,\n}) {\n  const dispatch = useDispatch();\n\n  const [selectedLabel, setSelectedLabel] = useState(initialValues.priority);\n  const [titleValue, setTitleValue] = useState(initialValues.title);\n  const [descriptionValue, setDescriptionValue] = useState(\n    initialValues.description\n  );\n  const [formattedDeadline, setFormattedDeadline] = useState(\n    initialValues.deadline\n  );\n\n  const handleRadioChange = event => {\n    setSelectedLabel(event.target.value);\n  };\n\n  const handleEditCard = () => {\n    dispatch(\n      updateCardById({\n        _id,\n        newCardData: {\n          title: titleValue,\n          description: descriptionValue,\n          priority: selectedLabel,\n          deadline: formattedDeadline,\n        },\n      })\n    );\n    close();\n  };\n\n  const handleAddNewCard = () => {\n    dispatch(\n      addCard({\n        title: titleValue,\n        description: descriptionValue,\n        priority: selectedLabel,\n        deadline: formattedDeadline,\n        column,\n      })\n    );\n    close();\n  };\n\n  return (\n    <div>\n      <h3 className={css.modalTitle}>{isEditing ? 'Edit card' : 'Add card'}</h3>\n      <form action=\"submit\" className={css.inputForm}>\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={titleValue}\n          onChange={event => setTitleValue(event.target.value)}\n          className={css.inputCardTitle}\n        />\n        <textarea\n          type=\"text\"\n          placeholder=\"Description\"\n          value={descriptionValue}\n          onChange={event => setDescriptionValue(event.target.value)}\n          className={css.inputCardDescription}\n        />\n        <div className={css.inputLabelColorContainer}>\n          <h4 className={css.inputLabelColor}>Label color</h4>\n        </div>\n\n        <label className={`${css.customRadio}`}>\n          <input\n            type=\"radio\"\n            name=\"radioGroup\"\n            value=\"without priority\"\n            onChange={handleRadioChange}\n            checked={selectedLabel === 'without priority'}\n            className={css.hiddenRadio}\n          />\n\n          {selectedLabel === 'without priority' ? (\n            <svg className={css.customIconchekedwithout}>\n              <use xlinkHref={`${sprite}#radio-button-checked`} />\n            </svg>\n          ) : (\n            <svg className={css.customIconUncheckedWithout}>\n              <use xlinkHref={`${sprite}#radio-button-unchecked`} />\n            </svg>\n          )}\n        </label>\n\n        <label className={`${css.customRadio}`}>\n          <input\n            type=\"radio\"\n            name=\"radioGroup\"\n            value=\"low\"\n            onChange={handleRadioChange}\n            checked={selectedLabel === 'low'}\n            className={css.hiddenRadio}\n          />\n\n          {selectedLabel === 'low' ? (\n            <svg className={css.customIconchekedlow}>\n              <use xlinkHref={`${sprite}#radio-button-checked`} />\n            </svg>\n          ) : (\n            <svg className={css.customIconUncheckedLow}>\n              <use xlinkHref={`${sprite}#radio-button-unchecked`} />\n            </svg>\n          )}\n        </label>\n\n        <label className={`${css.customRadio}`}>\n          <input\n            type=\"radio\"\n            name=\"radioGroup\"\n            value=\"medium\"\n            onChange={handleRadioChange}\n            checked={selectedLabel === 'medium'}\n            className={css.hiddenRadio}\n          />\n\n          {selectedLabel === 'medium' ? (\n            <svg className={css.customIconchekedmedium}>\n              <use xlinkHref={`${sprite}#radio-button-checked`} />\n            </svg>\n          ) : (\n            <svg className={css.customIconUncheckedmedium}>\n              <use xlinkHref={`${sprite}#radio-button-unchecked`} />\n            </svg>\n          )}\n        </label>\n\n        <label className={`${css.customRadio}`}>\n          <input\n            type=\"radio\"\n            name=\"radioGroup\"\n            value=\"high\"\n            onChange={handleRadioChange}\n            checked={selectedLabel === 'high'}\n            className={css.hiddenRadio}\n          />\n\n          {selectedLabel === 'high' ? (\n            <svg className={css.customIconchekedhigh}>\n              <use xlinkHref={`${sprite}#radio-button-checked`} />\n            </svg>\n          ) : (\n            <svg className={css.customIconUncheckedHigh}>\n              <use xlinkHref={`${sprite}#radio-button-unchecked`} />\n            </svg>\n          )}\n        </label>\n      </form>\n\n      <div className={css.deadlineContainer}>\n        <h4 action=\"\" className={css.deadlineTitle}>\n          Deadline\n        </h4>\n\n        <Calendar\n          setFormattedDeadline={setFormattedDeadline}\n          isEditing={isEditing}\n          deadline={initialValues.deadline}\n        />\n      </div>\n      <button\n        className={`${css.inputAddBtn} buttonWithIcon`}\n        onClick={isEditing ? handleEditCard : handleAddNewCard}\n      >\n        <div className={css.plusIconContainer}>\n          <svg className={css.plusIcon}>\n            <use xlinkHref={`${sprite}#plus`} />\n          </svg>\n        </div>\n        {isEditing ? 'Edit' : 'Add'}\n      </button>\n    </div>\n  );\n}\nexport default CreateCardPopUp;\n","// extracted by mini-css-extract-plugin\nexport default {\"column__item\":\"Column_column__item__7fLwB\",\"column\":\"Column_column__HvUub\",\"column__section\":\"Column_column__section__kEnHS\",\"column_title\":\"Column_column_title__n0RJ0\",\"column__edit__button\":\"Column_column__edit__button__th3Fo\",\"button__add__icon\":\"Column_button__add__icon__iD5S7\",\"column__icon\":\"Column_column__icon__Lh4G3\",\"button_create\":\"Column_button_create__MxGoS\",\"button__icon__background\":\"Column_button__icon__background__nnewO\",\"button__create__icon\":\"Column_button__create__icon__2gw+U\",\"button_create_title\":\"Column_button_create_title__sPch6\",\"button__create__column\":\"Column_button__create__column__4l0yH\",\"button__icon__bg\":\"Column_button__icon__bg__dLuLg\",\"button__icon\":\"Column_button__icon__boksN\",\"button__title\":\"Column_button__title__Uztph\",\"card__container\":\"Column_card__container__9qqK1\",\"card\":\"Column_card__eiYWq\",\"scroll__container\":\"Column_scroll__container__bPrLU\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"TaskCard_wrap__1oOKx\",\"priorityIndicator\":\"TaskCard_priorityIndicator__e+vFM\",\"priorityDefault\":\"TaskCard_priorityDefault__pXu6y\",\"priorityLow\":\"TaskCard_priorityLow__1yeZl\",\"priorityMedium\":\"TaskCard_priorityMedium__QhdNt\",\"priorityHigh\":\"TaskCard_priorityHigh__OH5NH\",\"content\":\"TaskCard_content__2WEnT\",\"title\":\"TaskCard_title__523o7\",\"description\":\"TaskCard_description__UNVnn\",\"additionsWrap\":\"TaskCard_additionsWrap__alxVD\",\"addition\":\"TaskCard_addition__M02Ux\",\"additionLabel\":\"TaskCard_additionLabel__kjLGR\",\"additionValue\":\"TaskCard_additionValue__CFlD4\",\"priorityWrap\":\"TaskCard_priorityWrap__gY8OM\",\"priorityIcon\":\"TaskCard_priorityIcon__ehuLU\",\"deadlineIcon\":\"TaskCard_deadlineIcon__CM8Rw\",\"actionsWrap\":\"TaskCard_actionsWrap__4f-Et\",\"actions\":\"TaskCard_actions__Pi8wS\",\"actionItem\":\"TaskCard_actionItem__fD9Oi\",\"actionBtn\":\"TaskCard_actionBtn__j3S27\",\"actionIcon\":\"TaskCard_actionIcon__DdWKZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ChangeColumn_container__XKYf0\",\"list\":\"ChangeColumn_list__MEE2W\",\"btn\":\"ChangeColumn_btn__N7zhP\",\"icon\":\"ChangeColumn_icon__pmqPl\"};","import { useShownBoard } from 'hooks/useShownBoard';\nimport css from './ChangeColumn.module.css';\nimport { Button } from 'components/Button/Button';\nimport { useDispatch } from 'react-redux';\nimport { transportCard } from 'redux/boards/boardsOperations';\nimport { Icon } from 'components/Svg/Icon';\n\nconst ChangeColumn = ({ columnId, handlerClose, cardId }) => {\n  const columns = useShownBoard().columns.filter(({ _id }) => _id !== columnId);\n  const dispatch = useDispatch();\n\n  const handlerClick = newColumnId => {\n    console.log(columnId, '-ид старой колонки');\n    console.log(cardId, '-ид карточки');\n    console.log(newColumnId, '- новый ид');\n\n    const changeColumnData = {\n      _id: cardId,\n      moveData: {\n        source: columnId,\n        destination: newColumnId,\n      },\n    };\n    dispatch(transportCard(changeColumnData));\n    handlerClose();\n  };\n  return (\n    <div className={css.container}>\n      <ul className={css.list}>\n        {columns.length !== 0\n          ? columns.map(el => (\n              <li key={el._id}>\n                <Button\n                  className={css.btn}\n                  handlerClick={() => handlerClick(el._id)}\n                >\n                  {el.title}\n                  <Icon id={'broken-right'} className={css.icon} />\n                </Button>\n              </li>\n            ))\n          : 'нет колонок'}\n      </ul>\n    </div>\n  );\n};\n\nexport default ChangeColumn;\n\n//\n","import css from './TaskCard.module.css';\n\nimport cn from 'classnames';\n\nimport { Icon } from './../Svg/Icon';\nimport { useDispatch } from 'react-redux';\nimport { deleteCard } from 'redux/boards/boardsOperations';\nimport Modal from 'components/Modal/Modal';\nimport CreateCardPopUp from 'components/CreateCardPopUp/CreateCardPopUp';\nimport { useState } from 'react';\nimport ChangeColumn from 'components/ChangeColumn/ChangeColumn';\n\n// const TaskCard = ({ data, onDelete, onEdit, onChange }) => {\nconst TaskCard = ({ data, columnId }) => {\n  const dispatch = useDispatch();\n  const [isOpenModalEditCard, setIsOpenModalEditCard] = useState(false);\n  const [idCardForEdit, setIdCardForEdit] = useState(null);\n  const [isOpenChangeColumn, setIsOpenChangeColumn] = useState(false);\n\n  const { _id, title, description, priority, deadline, column } = data;\n\n  const onChange = () => {\n    setIsOpenChangeColumn(!isOpenChangeColumn);\n  };\n\n  const onDelete = _id => {\n    dispatch(deleteCard(_id));\n  };\n\n  const onEdit = _id => {\n    setIsOpenModalEditCard(!isOpenModalEditCard);\n    setIdCardForEdit(_id);\n  };\n\n  const formatDate = isoDate => {\n    const dateParts = isoDate.split('-');\n    const formattedDate = dateParts.join('/');\n    return formattedDate;\n  };\n\n  const onDateFlip = date => {\n    const dateParts = date.split('-');\n    const outputString = `${dateParts[2]}-${dateParts[1]}-${dateParts[0]}`;\n    return outputString;\n  };\n\n  const onDateCompare = isoDate => {\n    const date = new Date();\n    const currentDate = date.toISOString();\n    if (onDateFlip(isoDate) === currentDate.substring(0, 10)) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <>\n      <div className={css.wrap}>\n        <div\n          className={cn(css.priorityIndicator, {\n            [css.priorityDefault]: priority === 'without priority',\n            [css.priorityLow]: priority === 'low',\n            [css.priorityMedium]: priority === 'medium',\n            [css.priorityHigh]: priority === 'high',\n          })}\n        ></div>\n        <div className={css.content}>\n          <h4 className={css.title}>{title}</h4>\n          <p className={css.description}>{description}</p>\n          <div className={css.additionsWrap}>\n            <div className={css.addition}>\n              <span className={css.additionLabel}>Priority</span>\n              <div className={css.priorityWrap}>\n                <div\n                  className={cn(css.priorityIcon, {\n                    [css.priorityDefault]: priority === 'without priority',\n                    [css.priorityLow]: priority === 'low',\n                    [css.priorityMedium]: priority === 'medium',\n                    [css.priorityHigh]: priority === 'high',\n                  })}\n                ></div>\n                <span className={css.additionValue}>{priority}</span>\n              </div>\n            </div>\n            <div className={css.addition}>\n              <span className={css.additionLabel}>Deadline</span>\n              <span className={css.additionValue}>{formatDate(deadline)}</span>\n            </div>\n            <div className={css.actionsWrap}>\n              {onDateCompare(deadline) && (\n                <Icon id=\"bell\" className={css.deadlineIcon}></Icon>\n              )}\n              <ul className={css.actions}>\n                <li className={css.actionItem}>\n                  <button\n                    type=\"button\"\n                    onClick={() => onChange(_id)}\n                    className={css.actionBtn}\n                  >\n                    <Icon id=\"broken-right\" className={css.actionIcon} />\n                  </button>\n                </li>\n                <li className={css.actionItem}>\n                  <button\n                    type=\"button\"\n                    onClick={() => onEdit(_id)}\n                    className={css.actionBtn}\n                  >\n                    <Icon id=\"pencil\" className={css.actionIcon} />\n                  </button>\n                </li>\n                <li className={css.actionItem}>\n                  <button\n                    type=\"button\"\n                    onClick={() => onDelete(_id)}\n                    className={css.actionBtn}\n                  >\n                    <Icon id=\"trash\" className={css.actionIcon} />\n                  </button>\n                </li>\n              </ul>\n            </div>\n          </div>\n          {isOpenChangeColumn && (\n            <ChangeColumn\n              columnId={columnId}\n              handlerClose={onChange}\n              cardId={_id}\n            />\n          )}\n        </div>\n      </div>\n      {isOpenModalEditCard && (\n        <Modal openModal={onEdit}>\n          <CreateCardPopUp\n            column={column}\n            _id={idCardForEdit}\n            isEditing={true}\n            initialValues={{\n              title: title,\n              description: description,\n              priority: priority,\n              deadline: deadline,\n            }}\n            close={onEdit}\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default TaskCard;\n\n// import css from './TaskCard.module.css';\n\n// import cn from 'classnames';\n\n// import { Icon } from './../Svg/Icon';\n\n// const TaskCard = ({ data, onDelete, onEdit, onChange }) => {\n//   const { _id, title, description, priority, deadline } = data;\n\n//   const formatDate = isoDate => {\n//     const date = new Date(isoDate);\n//     const day = date.getDate();\n//     const month = date.getMonth() + 1;\n//     const year = date.getFullYear();\n\n//     return `${day.toString().padStart(2, '0')}/${month\n//       .toString()\n//       .padStart(2, '0')}/${year}`;\n//   };\n\n//   const onDateCompare = isoDate => {\n//     const date = new Date();\n//     const currentDate = date.toISOString();\n//     if (isoDate.substring(0, 10) === currentDate.substring(0, 10)) {\n//       return true;\n//     }\n\n//     return false;\n//   };\n\n//   return (\n//     <div className={css.wrap}>\n//       <div\n//         className={cn(css.priorityIndicator, {\n//           [css.priorityDefault]: priority === 'without priority',\n//           [css.priorityLow]: priority === 'low',\n//           [css.priorityMedium]: priority === 'medium',\n//           [css.priorityHigh]: priority === 'high',\n//         })}\n//       ></div>\n//       <div className={css.content}>\n//         <h4 className={css.title}>{title}</h4>\n//         <p className={css.description}>{description}</p>\n//         <div className={css.additionsWrap}>\n//           <div className={css.addition}>\n//             <span className={css.additionLabel}>Priority</span>\n//             <div className={css.priorityWrap}>\n//               <div\n//                 className={cn(css.priorityIcon, {\n//                   [css.priorityDefault]: priority === 'without priority',\n//                   [css.priorityLow]: priority === 'low',\n//                   [css.priorityMedium]: priority === 'medium',\n//                   [css.priorityHigh]: priority === 'high',\n//                 })}\n//               ></div>\n//               <span className={css.additionValue}>{priority}</span>\n//             </div>\n//           </div>\n//           <div className={css.addition}>\n//             <span className={css.additionLabel}>Deadline</span>\n//             <span className={css.additionValue}>{formatDate(deadline)}</span>\n//           </div>\n//           <div className={css.actionsWrap}>\n//             {onDateCompare(deadline) && <Icon id='bell' className={css.deadlineIcon}></Icon>}\n//             <ul className={css.actions}>\n//               <li className={css.actionItem}>\n//                 <button\n//                   type=\"button\"\n//                   onClick={() => onChange(_id)}\n//                   className={css.actionBtn}\n//                 >\n//                   <Icon id=\"broken-right\" className={css.actionIcon}/>\n//                 </button>\n//               </li>\n//               <li className={css.actionItem}>\n//                 <button\n//                   type=\"button\"\n//                   onClick={() => onEdit(_id)}\n//                   className={css.actionBtn}\n//                 >\n//                   <Icon id=\"pencil\" className={css.actionIcon}/>\n//                 </button>\n//               </li>\n//               <li className={css.actionItem}>\n//                 <button\n//                   type=\"button\"\n//                   onClick={() => onDelete(_id)}\n//                   className={css.actionBtn}\n//                 >\n//                   <Icon id=\"trash\" className={css.actionIcon}/>\n//                 </button>\n//               </li>\n//             </ul>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default TaskCard;\n","import React, { useEffect, useState } from 'react';\nimport { Icon } from '../Svg/Icon';\n// import useScrollbar from '../Scroll/index';\nimport Modal from 'components/Modal/Modal';\nimport AddColumn from 'components/AddColumn';\nimport EditColumn from 'components/EditColumn';\n// import Card from 'components/Card/Card';\nimport CreateCardPopUp from 'components/CreateCardPopUp/CreateCardPopUp';\nimport { deleteColumn } from 'redux/boards/boardsOperations';\n// import { OverlayScrollbarsComponent } from 'overlayscrollbars-react';\n// import 'overlayscrollbars/overlayscrollbars.css';\nimport style from './Column.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useShownBoard } from 'hooks/useShownBoard';\nimport TaskCard from 'components/TaskCard/TaskCard';\nimport { getFilter } from 'redux/boards/boardsSelectors';\n\nconst Column = () => {\n  const [isOpenModalAddColumn, setIsOpenModalAddColumn] = useState(false);\n  const [isOpenModalEditColumn, setIsOpenModalEditColumn] = useState(false);\n  const [getIdColumn, setIdColumn] = useState(null);\n  const [isOpenModalAddCard, setIsOpenModalAddCard] = useState(false);\n\n  const [containerHeight, setContainerHeight] = useState(0);\n\n  const dispatch = useDispatch();\n\n  const shownBoard = useShownBoard();\n\n  const allColumns = shownBoard.columns;\n\n  const currentFilter = useSelector(getFilter);\n\n  // const filteredColumns = allColumns;\n\n  const filteredColumns = allColumns.map(column => {\n    if (column.cards) {\n      const result = column.cards.filter(\n        item => item.priority === currentFilter\n      );\n      return { ...column, cards: result };\n    } else {\n      return column;\n    }\n  });\n\n  const columns = currentFilter === '' ? allColumns : filteredColumns;\n\n  useEffect(() => {\n    const handleResize = () => {\n      setContainerHeight(window.innerHeight);\n    };\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const addColumn = () => {\n    setIsOpenModalAddColumn(!isOpenModalAddColumn);\n  };\n\n  const handlerEditColum = () => {\n    setIsOpenModalEditColumn(!isOpenModalEditColumn);\n  };\n\n  const addCard = () => {\n    setIsOpenModalAddCard(!isOpenModalAddCard);\n  };\n\n  //----------------скрол-віріант-1-(робочий)---------------------------\n  // const columnWrapper = useRef(null);\n  // const hasScroll = columns.length >= 1;\n  // const hasScroll = true;\n\n  // useScrollbar(columnWrapper, hasScroll);\n\n  return (\n    <div\n    // style={{ width: hasScroll ? '100%' : 'auto', minWidth: '320px' }}\n    // ref={columnWrapper}\n    >\n      <ul className={style.column__item}>\n        {columns.length !== 0 &&\n          columns.map(({ title, _id, cards }) => (\n            <li key={_id} className={style.column}>\n              <div className={style.column__section}>\n                <p className={style.column_title}>{title}</p>\n\n                <div className={style.column__edit__button}>\n                  <button\n                    onClick={e => {\n                      handlerEditColum();\n                      setIdColumn(_id);\n                    }}\n                  >\n                    <Icon id=\"pencil\" className={style.column__icon} />\n                  </button>\n                  <button onClick={() => dispatch(deleteColumn(_id))}>\n                    <Icon id=\"trash\" className={style.column__icon} />\n                  </button>\n                </div>\n              </div>\n              {/* <OverlayScrollbarsComponent> */}\n                <div \n                  className={style.card__container}\n                  style={{ maxHeight: `${containerHeight - 300}px` }}\n                  // style={{ height: `1920px` }}\n                >\n                  <ul className={style.scroll__container}>\n                    {cards &&\n                      cards.map(card => (\n                        <li key={card._id} className={style.card}>\n                          <TaskCard data={card} columnId={_id} />\n                        </li>\n                      ))}\n                  </ul>\n                </div>\n              {/* </OverlayScrollbarsComponent> */}\n\n              <button\n                className={style.button_create}\n                type=\"button\"\n                // onClick={addCard}\n                onClick={() => {\n                  addCard();\n                  setIdColumn(_id);\n                }}\n              >\n                <div className={style.button__icon__background}>\n                  <Icon id=\"plus\" className={style.button__create__icon} />\n                </div>\n                <p className={style.button_create_title}>Add another card</p>\n              </button>\n            </li>\n          ))}\n        <li className={style.column}>\n          <button\n            className={style.button__create__column}\n            type=\"button\"\n            onClick={addColumn}\n          >\n            <div className={style.button__icon__bg}>\n              <Icon id=\"plus\" className={style.button__icon} />\n            </div>\n            <p className={style.button__title}>Add another column</p>\n          </button>\n        </li>\n      </ul>\n      {isOpenModalAddColumn && (\n        <Modal openModal={addColumn}>\n          <AddColumn closeModal={addColumn} />\n        </Modal>\n      )}\n      {isOpenModalEditColumn && (\n        <Modal openModal={handlerEditColum}>\n          <EditColumn id={getIdColumn} close={handlerEditColum} />\n        </Modal>\n      )}\n      {isOpenModalAddCard && (\n        <Modal openModal={addCard}>\n          <CreateCardPopUp\n            column={getIdColumn}\n            isEditing={false}\n            initialValues={{\n              title: '',\n              description: '',\n              priority: 'without priority',\n              deadline: '',\n            }}\n            close={addCard}\n          />\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default Column;\n\n// import React, { useRef, useState } from 'react';\n// import { Icon } from '../Svg/Icon';\n// import useScrollbar from '../Scroll/index';\n// import Modal from 'components/Modal/Modal';\n// import AddColumn from 'components/AddColumn';\n// import EditColumn from 'components/EditColumn';\n// import Card from 'components/Card/Card';\n// import CreateCardPopUp from 'components/CreateCardPopUp/CreateCardPopUp';\n// import { deleteColumn } from 'redux/boards/boardsOperations';\n// import 'overlayscrollbars/overlayscrollbars.css';\n// import style from './Column.module.css';\n// import { useDispatch } from 'react-redux';\n\n// import { useBoardsList } from 'hooks/useBoardsList';\n\n// const columns = [\n//   {\n//     title: 'To Do',\n//     _id: '1',\n//   },\n//   {\n//     title: 'In progress',\n//     _id: '2',\n//   },\n//   {\n//     title: 'Done',\n//     _id: '3',\n//   },\n//   {\n//     title: 'Star',\n//     _id: '4',\n//   },\n// ];\n\n// const Column = () => {\n//   const [isOpenModalAddColumn, setIsOpenModalAddColumn] = useState(false);\n//   const [isOpenModalEditColumn, setIsOpenModalEditColumn] = useState(false);\n//   const [getIdColumn, setIdColumn] = useState(null);\n//   const [isOpenModalAddCard, setIsOpenModalAddCard] = useState(false);\n\n//   const dispatch = useDispatch();\n\n//   const boards = useBoardsList();\n//   console.log(boards)\n\n//   // const {columns} = boards\n//   // console.log(columns)\n\n//   const addColumn = () => {\n//     setIsOpenModalAddColumn(!isOpenModalAddColumn);\n//   };\n\n//   const handlerEditColum = () => {\n//     setIsOpenModalEditColumn(!isOpenModalEditColumn);\n//   };\n\n//   const addCard = () => {\n//     setIsOpenModalAddCard(!isOpenModalAddCard);\n//   };\n\n//   // const deleteColumn =() => {\n//   //   return alert('STOP!')\n//   // }\n\n//   //----------------скрол-віріант-1-(робочий)---------------------------\n//   const columnWrapper = useRef(null);\n//   const hasScroll = columns.length >= 1;\n\n//   useScrollbar(columnWrapper, hasScroll);\n\n//   return (\n//     <div\n//       style={{ width: hasScroll ? '100%' : 'auto', minWidth: '320px' }}\n//       ref={columnWrapper}\n//     >\n//       <ul className={style.column__item}>\n//         {columns.map(({ title, _id, cards }) => (\n//           <li key={_id} className={style.column}>\n//             <div className={style.column__section}>\n//               <p className={style.column_title}>{title}</p>\n\n//               <div className={style.column__edit__button}>\n//                 <button\n//                   onClick={e => {\n//                     handlerEditColum();\n//                     setIdColumn(_id);\n//                   }}\n//                 >\n//                   <Icon id=\"pencil\" className={style.column__icon} />\n//                 </button>\n//                 <button onClick={() => dispatch(deleteColumn(_id))}>\n//                   <Icon id=\"trash\" className={style.column__icon} />\n//                 </button>\n//               </div>\n//             </div>\n//             <div className={style.card__container}>\n//               <Card />\n//             </div>\n//             <button\n//               className={style.button_create}\n//               type=\"button\"\n//               onClick={addCard}\n//             >\n//               <div className={style.button__icon__background}>\n//                 <Icon id=\"plus\" className={style.button__create__icon} />\n//               </div>\n//               <p className={style.button_create_title}>Add another card</p>\n//             </button>\n//           </li>\n//         ))}\n//         <li>\n//           <button\n//             className={style.button__create__column}\n//             type=\"button\"\n//             onClick={addColumn}\n//           >\n//             <div className={style.button__icon__bg}>\n//               <Icon id=\"plus\" className={style.button__icon} />\n//             </div>\n//             <p className={style.button__title}>Add another column</p>\n//           </button>\n//         </li>\n//       </ul>\n//       {isOpenModalAddColumn && (\n//         <Modal openModal={addColumn}>\n//           <AddColumn closeModal={addColumn} />\n//         </Modal>\n//       )}\n//       {isOpenModalEditColumn && (\n//         <Modal openModal={handlerEditColum}>\n//           <EditColumn id={getIdColumn} close={handlerEditColum} />\n//         </Modal>\n//       )}\n//       {isOpenModalAddCard && (\n//         <Modal openModal={addCard}>\n//           <CreateCardPopUp />\n//         </Modal>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default Column;\n","// extracted by mini-css-extract-plugin\nexport default {\"column__container\":\"BoardCreated_column__container__9T8jq\"};","import React from 'react';\nimport Column from 'components/Column/Column';\nimport style from './BoardCreated.module.css';\n// import 'overlayscrollbars/overlayscrollbars.css';\n// import { OverlayScrollbarsComponent } from \"overlayscrollbars-react\";\n// // import { OverlayScrollbars } from 'overlayscrollbars';\n\nconst BoardCreated = () => {\n\n  // const scrollContainer = document.getElementById(\"scrollContainer\");\n  // const scrollBar = scrollContainer.querySelector(\".column__container::-webkit-scrollbar-thumb\")\n\n  // if (!scrollBar) {\n  //   scrollContainer.classList.add(\"-webkit-scrollbar-track\");\n  // }\n  // -------------------скрол-варіант-3-(не политів)-----------------------------------\n\n  // useEffect(() => {\n  //   const containerElement = document.querySelector('#style.column__container');\n  //   const osInstance = OverlayScrollbars(containerElement, {});\n\n  //   return () => {\n  //     osInstance.destroy();\n  //   };\n  // }, []);\n\n  // ------------------скрол-варіант-2-(не политів)-------------------------------------\n  // OverlayScrollbars({\n  //   target: document.querySelector('#column__item'),\n  //   elements: {\n  //     viewport: document.querySelector('#column__container'),\n  //   },\n  //  }, {});\n\n  return (\n    //---------------скрол 4 варіант-не-полетів-------\n    //<OverlayScrollbarsComponent\n    // element=\"Column\"\n    // options={{ scrollbars: { autoHide: 'never' } }}\n    // events={{ scroll: () => {} }}\n    // defer\n    //>\n\n\n\n    \n    <div id=\"scrollContainer\" className={style.column__container}\n    \n    >\n\n\n\n      {/* <OverlayScrollbarsComponent> */}\n            <Column />\n      {/* </OverlayScrollbarsComponent> */}\n  \n    </div>\n\n    //</OverlayScrollbarsComponent>\n  );\n};\n\nexport default BoardCreated;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Filter_title__pSkfx\",\"filterContainer\":\"Filter_filterContainer__8G57N\",\"listTitle\":\"Filter_listTitle__jM+xp\",\"filterList\":\"Filter_filterList__Sfn16\",\"btn\":\"Filter_btn__9ZHMS\",\"filterListItem\":\"Filter_filterListItem__PLSVz\",\"inputBtn\":\"Filter_inputBtn__2Zo-U\",\"visuallyHidden\":\"Filter_visuallyHidden__eKHuf\"};","import React from 'react';\nimport style from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from 'redux/boards/boardsSelectors';\nimport { addFilter } from 'redux/boards/filterSlice';\n\nconst Filter = ({ openModal }) => {\n  const dispatch = useDispatch();\n\n  const currentFilter = useSelector(getFilter);\n\n  return (\n    <>\n      <h2 className={style.title}>Filters</h2>\n      <div className={style.filterContainer}>\n        <div className={style.filterListWrap}>\n          <form\n            onChange={e => {\n              openModal();\n              dispatch(addFilter(e.target.value));\n            }}\n            className={style.filterList}\n          >\n            <div className={style.radioBtn}>\n              <h3 className={style.listTitle}>Label color</h3>\n              <input\n                value={'without priority'}\n                className={style.visuallyHidden}\n                type=\"radio\"\n                name=\"filter\"\n                id=\"without-priority\"\n                defaultChecked={\n                  currentFilter === 'without priority' ? true : false\n                }\n              />\n              <label\n                htmlFor=\"without-priority\"\n                className={style.filterListItem}\n              >\n                <span\n                  style={{ backgroundColor: 'var(--modal-level-color)' }}\n                  className={style.inputBtn}\n                ></span>\n                Without priority\n              </label>\n              <input\n                value={'low'}\n                className={style.visuallyHidden}\n                type=\"radio\"\n                name=\"filter\"\n                id=\"low\"\n                defaultChecked={currentFilter === 'low' ? true : false}\n              />\n              <label htmlFor=\"low\" className={style.filterListItem}>\n                <span\n                  style={{ backgroundColor: '#8fa1d0' }}\n                  className={style.inputBtn}\n                ></span>\n                Low\n              </label>\n              <input\n                value={'medium'}\n                className={style.visuallyHidden}\n                type=\"radio\"\n                name=\"filter\"\n                id=\"medium\"\n                defaultChecked={currentFilter === 'medium' ? true : false}\n              />\n              <label htmlFor=\"medium\" className={style.filterListItem}>\n                <span\n                  style={{ backgroundColor: '#e09cb5 ' }}\n                  className={style.inputBtn}\n                ></span>\n                Medium\n              </label>\n              <input\n                value={'high'}\n                className={style.visuallyHidden}\n                type=\"radio\"\n                name=\"filter\"\n                id=\"high\"\n                defaultChecked={currentFilter === 'high' ? true : false}\n              />\n              <label htmlFor=\"high\" className={style.filterListItem}>\n                <span\n                  style={{ backgroundColor: '#bedbb0 ' }}\n                  className={style.inputBtn}\n                ></span>\n                High\n              </label>\n            </div>\n            <label className={style.btn}>\n              Show all\n              <input\n                value={''}\n                className={style.visuallyHidden}\n                type=\"radio\"\n                name=\"filter\"\n              />\n            </label>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"screen__section\":\"ScreensPage_screen__section__EMe3a\",\"title__container\":\"ScreensPage_title__container__O9M5R\",\"title__wrap\":\"ScreensPage_title__wrap__VP2Gr\",\"title__board\":\"ScreensPage_title__board__iER23\",\"button__filter\":\"ScreensPage_button__filter__fAGHh\",\"button__filter__icon\":\"ScreensPage_button__filter__icon__UmCCE\",\"button__filter__title\":\"ScreensPage_button__filter__title__+7WgU\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Modal from 'components/Modal';\n\nimport Board from 'components/Board';\nimport BoardCreated from 'components/BoardCreated/BoardCreated.jsx';\nimport Filter from 'components/Filter';\n\n// import BoardCreated from 'components/BoardCreated';\n// import Filter from 'components/Filter/Filter';\nimport { Icon } from '../../components/Svg/Icon.jsx';\nimport style from './ScreensPage.module.css';\nimport { useShownBoard } from 'hooks/useShownBoard.js';\n\nconst ScreensPage = () => {\n  const [bgImage, setBgImages] = useState('');\n  const [innerWidth, setInnerWidth] = useState(null);\n  const [openFilter, setOpenFilter] = useState(false);\n  const { boardName } = useParams();\n  const { backgroundURL } = useShownBoard();\n\n  const handleOpenFilter = () => {\n    setOpenFilter(true);\n    console.log('filter');\n  };\n\n  useEffect(() => {\n    const handleResizePage = () => setInnerWidth(window.innerWidth);\n    window.addEventListener('resize', handleResizePage);\n\n    if (backgroundURL) {\n      const isRetina = window.matchMedia('(min-resolution: 2dppx)').matches;\n      setBgImages(() => {\n        return isRetina ? backgroundURL.mobile_2x : backgroundURL.mobile_1x;\n      });\n      // MEDIA MOBILE\n      if (\n        window.matchMedia('(min-width: 375px) and (max-width: 767px)').matches\n      ) {\n        setBgImages(() => {\n          return isRetina ? backgroundURL.tablet_2x : backgroundURL.tablet_1x;\n        });\n        return;\n      }\n\n      // MEDIA TABLET\n      if (\n        window.matchMedia('(min-width: 768px) and (max-width: 1439px)').matches\n      ) {\n        setBgImages(() => {\n          return isRetina ? backgroundURL.desktop_2x : backgroundURL.desktop_1x;\n        });\n\n        return;\n      }\n\n      // MEDIA DESKTOP\n      if (window.matchMedia('(min-width: 1440px)').matches) {\n        setBgImages(() => {\n          return backgroundURL.desktop_2x;\n        });\n        return;\n      }\n    }\n\n    return () => window.removeEventListener('resize', handleResizePage);\n  }, [backgroundURL, boardName, bgImage, innerWidth]);\n\n  return (\n    <div\n      className={style.screen__section}\n      style={{ backgroundImage: `url(${bgImage})` }}\n    >\n      {openFilter && (\n        <Modal\n          children={<Filter openModal={setOpenFilter} />}\n          openModal={setOpenFilter}\n        />\n      )}\n      <div className={style.title__container}>\n        <span className={style.title__wrap}>\n          <p className={style.title__board}>{boardName}</p>\n        </span>\n        <span className={style.title__wrap}>\n          <button\n            className={style.button__filter}\n            type=\"button\"\n            onClick={handleOpenFilter}\n          >\n            <Icon id=\"filter\" className={style.button__filter__icon} />\n            <p className={style.button__filter__title}>Filters</p>\n          </button>\n        </span>\n      </div>\n      {/* <BoardCreated /> */}\n      {!boardName ? <Board /> : <BoardCreated />}\n    </div>\n  );\n};\n\nexport default ScreensPage;\n","export const selectIsBoardsLoading = state => state.boards.isLoading;\nexport const selectAllBoardsList = state => state.boards.allBoards;\nexport const selectShownBoard = state => state.boards.shownBoard;\nexport const getFilter = state => state.filter.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"divCard\":\"NewBoard_divCard__Yvc0E\",\"textNew\":\"NewBoard_textNew__5GqJO\",\"titleInput\":\"NewBoard_titleInput__BWa5Q\",\"textIcons\":\"NewBoard_textIcons__ZGlG6\",\"listDarkIcons\":\"NewBoard_listDarkIcons__-svhN\",\"listColorIcons\":\"NewBoard_listColorIcons__3CIj+\",\"listItem\":\"NewBoard_listItem__MJf1H\",\"listItemActive\":\"NewBoard_listItemActive__c4Eky\",\"serIcons\":\"NewBoard_serIcons__FSBM7\",\"darkIcons\":\"NewBoard_darkIcons__pId0e\",\"textBackground\":\"NewBoard_textBackground__uPS9O\",\"mainButton\":\"NewBoard_mainButton__2fLih\",\"plusBtnZaglushka\":\"NewBoard_plusBtnZaglushka__WDTvL\",\"plusIcon\":\"NewBoard_plusIcon__Iv9ny\",\"img_back\":\"NewBoard_img_back__TcWyf\",\"inputBtnIcons\":\"NewBoard_inputBtnIcons__zODL7\",\"buttonIcons\":\"NewBoard_buttonIcons__2Zt+-\",\"buttonBack\":\"NewBoard_buttonBack__5mH1R\",\"inputRad\":\"NewBoard_inputRad__oOlUv\",\"inputBack\":\"NewBoard_inputBack__kia3O\"};"],"names":["Button","children","type","className","handlerClick","label","onClick","modalRoot","document","querySelector","openModal","userTheme","useUserData","useEffect","handleKeyDown","e","code","window","addEventListener","removeEventListener","createPortal","style","event","currentTarget","target","href","sprite","useState","icons","setIcons","background","setBackground","title","setTitle","navigate","useNavigate","dispatch","useDispatch","getIcon","dataset","source","console","log","getBack","newBoardObject","icon","styles","placeholder","onChange","value","name","id","src","noBack","alt","magnolia","starrySky","sakura","halfMoon","palmLeaves","clouds","rockyBeach","violetCircle","fullMoon","yacht","baloon","mountains","sea","cappodocia","nightTrailer","addBoard","Icon","Icons","useShownBoard","useSelector","selectShownBoard","selectUserData","openNewBoardModal","setOpenEditBoardModal","Modal","NewBoard","closeModal","shownBoardId","_id","css","onSubmit","evt","preventDefault","inputValue","trim","newColumn","board","addColumn","autoFocus","close","columns","find","editColumnValue","setEditColumnValue","handlerEditColumn","editColumn","newColumnData","updateColumnById","ButtonField","props","calendarBtnThemChenger","theme","setTheme","React","newTheme","setOpen","disabled","open","InputProps","ref","inputProps","ariaLabel","sx","margin","padding","color","textTransform","fontSize","justifyContent","align","prev","xlinkHref","ButtonDatePicker","DatePicker","showDaysOutsideCurrentMonth","slots","field","slotProps","onClose","onOpen","setFormattedDeadline","isEditing","deadline","deadlineDate","setdDeadlineDate","sameDay","setsameDay","today","dayjs","format","$d","LocalizationProvider","dateAdapter","AdapterDayjs","Stack","spacing","disablePast","newValue","choisedDate","Date","isSameDay","isSame","column","initialValues","priority","selectedLabel","setSelectedLabel","titleValue","setTitleValue","description","descriptionValue","setDescriptionValue","formattedDeadline","handleRadioChange","action","checked","updateCardById","newCardData","addCard","columnId","handlerClose","cardId","filter","length","map","el","newColumnId","changeColumnData","moveData","destination","transportCard","isoDate","data","isOpenModalEditCard","setIsOpenModalEditCard","idCardForEdit","setIdCardForEdit","isOpenChangeColumn","setIsOpenChangeColumn","onEdit","cn","split","join","currentDate","toISOString","date","dateParts","onDateFlip","substring","onDateCompare","deleteCard","onDelete","isOpenModalAddColumn","setIsOpenModalAddColumn","isOpenModalEditColumn","setIsOpenModalEditColumn","getIdColumn","setIdColumn","isOpenModalAddCard","setIsOpenModalAddCard","containerHeight","setContainerHeight","allColumns","currentFilter","getFilter","filteredColumns","cards","result","item","handleResize","innerHeight","handlerEditColum","deleteColumn","maxHeight","card","addFilter","defaultChecked","htmlFor","backgroundColor","bgImage","setBgImages","innerWidth","setInnerWidth","openFilter","setOpenFilter","boardName","useParams","backgroundURL","handleResizePage","isRetina","matchMedia","matches","mobile_2x","mobile_1x","tablet_2x","tablet_1x","desktop_2x","desktop_1x","backgroundImage","selectAllBoardsList","state","boards","allBoards","shownBoard"],"sourceRoot":""}