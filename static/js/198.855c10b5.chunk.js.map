{"version":3,"file":"static/js/198.855c10b5.chunk.js","mappings":"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","sources":["webpack://task-pro-team-project/./src/pages/HomePage/HomePage.module.css?5baa","webpack://task-pro-team-project/./src/components/Header/Header.module.css?4e72","webpack://task-pro-team-project/./src/components/Select/Select.module.css?c4f6","components/Select/Select.jsx","webpack://task-pro-team-project/./src/components/Profile/Profile.module.css?b512","components/Profile/Profile.jsx","webpack://task-pro-team-project/./src/components/EditProfile/EditProfile.module.css?5511","components/EditProfile/EditProfile.jsx","components/Header/Header.jsx","webpack://task-pro-team-project/./src/components/Sidebar/Sidebar.module.css?6ffa","webpack://task-pro-team-project/./src/components/Needhelp/NeedHelp.module.css?4cb4","components/Needhelp/NeedHelp.jsx","components/NewEditBoard/EditBoard.jsx","components/Sidebar/Sidebar.jsx","hooks/useBoardsList.js","pages/HomePage/HomePage.jsx","scheme/LoginFormSchema.js","scheme/RegisterFormSchema.js","scheme/EditProfileSchema.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"test\":\"HomePage_test__p9Ie2\",\"navigate\":\"HomePage_navigate__9vLUE\",\"homePage_wrap\":\"HomePage_homePage_wrap__oDugW\"};","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"Header_header__HXQOm\",\"header_iconMenu\":\"Header_header_iconMenu__pA0yw\",\"container\":\"Header_container__vI36D\",\"menu_btn\":\"Header_menu_btn__HyCFs\",\"profile_container\":\"Header_profile_container__WSDqX\"};","// extracted by mini-css-extract-plugin\nexport default {\"select\":\"Select_select__OlUEn\",\"select_btn\":\"Select_select_btn__oOohp\",\"select_content\":\"Select_select_content__oemOD\",\"select_item\":\"Select_select_item__w1ZAF\",\"selected_item\":\"Select_selected_item__+sKYP\"};","import css from './Select.module.css';\nimport icon from '../../img/svg/sprite-icon.svg';\nimport { useEffect, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { changeTheme } from 'redux/auth/operations';\nimport { useUserData } from 'hooks/useUserData';\n\nexport const Select = ({ option = [], placeholder }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const { userTheme } = useUserData();\n\n  const dispatch = useDispatch();\n  const ref = useRef(null);\n\n  useEffect(() => {\n    const handleClick = evt => {\n      if (isOpen && ref.current && !ref.current.contains(evt.target)) {\n        setIsOpen(false);\n      }\n    };\n\n    document.addEventListener('click', handleClick);\n    return () => {\n      document.removeEventListener('click', handleClick);\n    };\n  }, [isOpen]);\n\n  const handlerIsOpen = () => {\n    setIsOpen(!isOpen);\n  };\n  const handlerSelectedOption = ({ target }) => {\n    const newTheme = target.textContent.toLowerCase();\n    if (newTheme === userTheme) return;\n\n    dispatch(changeTheme({ userTheme: newTheme }));\n\n    setIsOpen(false);\n  };\n\n  return (\n    <div className={css.select} ref={ref}>\n      <button className={css.select_btn} onClick={handlerIsOpen}>\n        {/* {!selectedOption\n            ? placeholder && typeof placeholder === 'string'\n              ? placeholder\n              : 'Select'\n            : selectedOption} */}\n        {placeholder}\n\n        <svg width={16} height={16}>\n          <use href={`${icon}#chevron-down`}></use>\n        </svg>\n      </button>\n      {isOpen && (\n        <ul className={css.select_content}>\n          {option.map((el, index) => (\n            <li key={index}>\n              <button\n                className={`${css.select_item} ${\n                  el.toLowerCase() === userTheme ? css.selected_item : ''\n                }  `}\n                onClick={handlerSelectedOption}\n              >\n                {el}\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"profile_btn\":\"Profile_profile_btn__jaXfv\",\"profile_avatar\":\"Profile_profile_avatar__e-il-\",\"profile_icon\":\"Profile_profile_icon__v8b6q\"};","import css from './Profile.module.css';\nimport { Button } from 'components/Button/Button';\nimport icon from '../../img/svg/sprite-icon.svg';\nimport { useUserData } from 'hooks/useUserData';\n\nconst Profile = ({ handlerClick }) => {\n  const { name, avatarURL } = useUserData();\n\n  return (\n    <div>\n      <Button className={css.profile_btn} handlerClick={handlerClick}>\n        {name}\n        {avatarURL ? (\n          <img src={avatarURL} alt=\"avatar\" className={css.profile_avatar} />\n        ) : (\n          <svg className={css.profile_icon}>\n            <use href={`${icon}#icon-user-ico`}></use>\n          </svg>\n        )}\n      </Button>\n    </div>\n  );\n};\n\nexport default Profile;\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"EditProfile_modal__0jWyl\",\"formStyle\":\"EditProfile_formStyle__vpd2s\",\"labelStyle\":\"EditProfile_labelStyle__dnHAL\",\"inputName\":\"EditProfile_inputName__fZ5Kb\",\"inputNameImg\":\"EditProfile_inputNameImg__6ey1a\",\"img\":\"EditProfile_img__h28ed\",\"imgUser\":\"EditProfile_imgUser__mAtdu\",\"btnAdd\":\"EditProfile_btnAdd__LR9vz\",\"titleName\":\"EditProfile_titleName__1eRzf\",\"passwordToggle\":\"EditProfile_passwordToggle__YCXWu\",\"fieldIcon\":\"EditProfile_fieldIcon__MH3jO\",\"inputError\":\"EditProfile_inputError__Aif+L\",\"plusIcon\":\"EditProfile_plusIcon__cwbsO\",\"plusIconBackground\":\"EditProfile_plusIconBackground__4ykQN\",\"imgBackground\":\"EditProfile_imgBackground__uDDNa\"};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useUserData } from 'hooks/useUserData';\n\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\n\nimport { editProfileSchema } from '../../scheme/index';\n\nimport css from './EditProfile.module.css';\n\nimport sprite from '../../img/svg/sprite-icon.svg';\nimport { useDispatch } from 'react-redux';\nimport { updateProfile } from 'redux/auth/operations';\n\nconst EditProfile = ({ onClose }) => {\n  const user = useUserData();\n  const dispatch = useDispatch();\n\n  const [avatar, setAvatar] = useState(user.avatarURL);\n  const [localAvatar, setLocalAvatar] = useState(null);\n  const [avatarUploaded, setAvatarUploaded] = useState('false');\n  const [passwordVisible, setPasswordVisible] = useState(false);\n\n  const togglePasswordVisibility = () => {\n    setPasswordVisible(!passwordVisible);\n  };\n\n  const handleChangeAvatar = event => {\n    setAvatar(event.target.files[0]);\n\n    setAvatarUploaded(event.target.files[0]);\n    const formData = new FormData();\n\n    setLocalAvatar(URL.createObjectURL(event.target.files[0]));\n\n    formData.append('avatarUploaded', avatarUploaded);\n  };\n\n  const modalClose = event => {\n    onClose();\n  };\n\n  const initialValues = {\n    avatar: '',\n    name: user.name,\n    email: user.email,\n    password: '',\n  };\n\n  const onSubmit = ({ name, email, password }) => {\n    let formData = new FormData();\n\n    formData.set('avatar', avatar);\n\n    let updatedProfile;\n\n    if (user.avatarURL !== '' || user.avatarURL === '') {\n      if (avatarUploaded.type) {\n        if (password === '') {\n          updatedProfile = {\n            name,\n            email,\n            avatar,\n          };\n        } else {\n          updatedProfile = {\n            name,\n            email,\n            password,\n            avatar,\n          };\n        }\n      } else {\n        if (password === '') {\n          updatedProfile = {\n            name,\n            email,\n          };\n        } else {\n          updatedProfile = {\n            name,\n            email,\n            password,\n          };\n        }\n      }\n    }\n\n    dispatch(updateProfile(updatedProfile));\n    modalClose();\n  };\n\n  // if (avatarUploaded.type) {\n  //   window.alert(\n  //     'Фото завантажено. Якщо ви закінчили редагувати профіль, то для оновлення Аватарки натисніть кнопку Send'\n  //   );\n  // }\n\n  return (\n    <div className={css.modal}>\n      <h2 className={css.titleName}>Edit profile</h2>\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={editProfileSchema}\n        onSubmit={onSubmit}\n      >\n        {props => (\n          <Form className={css.formStyle}>\n            <label className={css.labelStyle}>\n              <input\n                className={css.inputNameImg}\n                type=\"file\"\n                name=\"avatar\"\n                onChange={handleChangeAvatar}\n              />\n\n              {!localAvatar && user.avatarURL === '' ? (\n                <div className={css.imgBackground}>\n                  <svg width=\"68\" height=\"68\" className={css.img}>\n                    <use xlinkHref={`${sprite}#icon-user-ico`} />\n                  </svg>\n                  <div className={css.plusIconBackground}>\n                    <svg width=\"10\" height=\"10\" className={css.plusIcon}>\n                      <use xlinkHref={`${sprite}#plus`} />\n                    </svg>\n                  </div>\n                </div>\n              ) : (\n                <div className={css.imgBackground}>\n                  <img\n                    src={localAvatar ? localAvatar : user.avatarURL}\n                    className={css.imgUser}\n                    alt=\"avatar\"\n                  />\n                  <div className={css.plusIconBackground}>\n                    <svg width=\"10\" height=\"10\" className={css.plusIcon}>\n                      <use xlinkHref={`${sprite}#plus`} />\n                    </svg>\n                  </div>\n                </div>\n              )}\n            </label>\n            <label className={css.labelStyle}>\n              <Field\n                className={css.inputName}\n                type=\"text\"\n                name=\"name\"\n                value={props.values.name}\n                onChange={props.handleChange}\n              />\n              <ErrorMessage\n                name=\"name\"\n                component=\"div\"\n                className={css.inputError}\n              />\n            </label>\n            <label className={css.labelStyle}>\n              <Field\n                className={css.inputName}\n                type=\"email\"\n                name=\"email\"\n                value={props.values.email}\n                onChange={props.handleChange}\n              />\n              <ErrorMessage\n                name=\"email\"\n                component=\"div\"\n                className={css.inputError}\n              />\n            </label>\n            <label className={css.labelStyle}>\n              <Field\n                className={css.inputName}\n                type={passwordVisible ? 'text' : 'password'}\n                name=\"password\"\n                value={props.values.password}\n                placeholder=\"Password\"\n                onChange={props.handleChange}\n              />\n              <ErrorMessage\n                name=\"password\"\n                component=\"div\"\n                className={css.inputError}\n              />\n              <span\n                className={css.passwordToggle}\n                onClick={togglePasswordVisibility}\n              >\n                <svg width=\"18\" height=\"18\" className={css.fieldIcon}>\n                  <use xlinkHref={`${sprite}#eye`} />\n                </svg>\n              </span>\n            </label>\n            <button type=\"submit\" className={css.btnAdd}>\n              Send\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nEditProfile.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default EditProfile;\n","import css from './Header.module.css';\nimport icon from '../../img/svg/sprite-icon.svg';\nimport { Button } from 'components/Button/Button';\nimport { Select } from 'components/Select/Select';\nimport Profile from '../Profile';\nimport { useState } from 'react';\nimport Modal from '../Modal/Modal';\nimport EditProfile from '../EditProfile';\n\nconst Header = ({ handlerMenu }) => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  const handlerModalIsOpen = () => {\n    setModalIsOpen(!modalIsOpen);\n  };\n  const option = ['Light', 'Dark', 'Violet'];\n  return (\n    <header className={css.header}>\n      <div className={css.container}>\n        <Button\n          className={css.menu_btn}\n          handlerClick={handlerMenu}\n          label=\"Open menu\"\n        >\n          <svg className={css.header_iconMenu}>\n            <use href={`${icon}#icon-menu`}></use>\n          </svg>\n        </Button>\n        <div className={css.profile_container}>\n          <Select placeholder={'Theme'} option={option} />\n          <Profile handlerClick={handlerModalIsOpen} />\n        </div>\n      </div>\n      {modalIsOpen && (\n        <Modal openModal={handlerModalIsOpen}>\n          <EditProfile onClose={handlerModalIsOpen} />\n        </Modal>\n      )}\n    </header>\n  );\n};\n\nexport default Header;\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Sidebar_backdrop__9j6AR\",\"sidebar\":\"Sidebar_sidebar__zfhso\",\"slideIn\":\"Sidebar_slideIn__Bj8xV\",\"slideOut\":\"Sidebar_slideOut__h676T\",\"open\":\"Sidebar_open__uSeyZ\",\"close\":\"Sidebar_close__DTTSI\",\"logo\":\"Sidebar_logo__nz6-R\",\"logoText\":\"Sidebar_logoText__BQn16\",\"myBoards\":\"Sidebar_myBoards__jKrk7\",\"myBoardsText\":\"Sidebar_myBoardsText__PMuCf\",\"createBoardSection\":\"Sidebar_createBoardSection__imlCs\",\"createBoardText\":\"Sidebar_createBoardText__lEBUF\",\"createBoardButton\":\"Sidebar_createBoardButton__2ZWjJ\",\"boardsList\":\"Sidebar_boardsList__ALbTr\",\"boardsItem\":\"Sidebar_boardsItem__ltTPV\",\"boardTools\":\"Sidebar_boardTools__8s8Ar\",\"active\":\"Sidebar_active__8Rvdk\",\"boardName\":\"Sidebar_boardName__8IrXV\",\"boardIcon\":\"Sidebar_boardIcon__3R20y\",\"boardTitle\":\"Sidebar_boardTitle__inHAi\",\"needHelpSection\":\"Sidebar_needHelpSection__XcLYO\",\"needHelpImage\":\"Sidebar_needHelpImage__P5dWY\",\"needHelpText\":\"Sidebar_needHelpText__2spws\",\"taskPro\":\"Sidebar_taskPro__Kvl9F\",\"needHelpButton\":\"Sidebar_needHelpButton__sCHFz\",\"logOutButton\":\"Sidebar_logOutButton__sEjsO\",\"addIcon\":\"Sidebar_addIcon__iR+UP\",\"editBoardIcon\":\"Sidebar_editBoardIcon__1X7Sl\",\"helpIcon\":\"Sidebar_helpIcon__cbFsg\",\"logoutIcon\":\"Sidebar_logoutIcon__jgIV-\"};","// extracted by mini-css-extract-plugin\nexport default {\"modalTitle\":\"NeedHelp_modalTitle__rU8a-\",\"inputForm\":\"NeedHelp_inputForm__tTgBH\",\"inputCardTitle\":\"NeedHelp_inputCardTitle__Im6ht\",\"inputCardDescription\":\"NeedHelp_inputCardDescription__B3Ae+\",\"inputAddBtn\":\"NeedHelp_inputAddBtn__74fP5\",\"plusIconContainer\":\"NeedHelp_plusIconContainer__M96C9\",\"plusIcon\":\"NeedHelp_plusIcon__3wp5F\"};","import { useDispatch } from 'react-redux';\nimport css from './NeedHelp.module.css';\nimport { useState } from 'react';\nimport { sendNeedHelpLetter } from 'redux/auth/operations';\nimport { toast } from 'react-hot-toast';\n\nexport default function NeedHelp({ openModal }) {\n  const [emailValue, setEmailValue] = useState('');\n  const [descriptionValue, setDescriptionValue] = useState('');\n\n  const dispatch = useDispatch();\n\n  const validateEmail = email => {\n    const regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n    return regex.test(email);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    let hasError = false;\n\n    if (!validateEmail(emailValue)) {\n      toast.error(`Invalid email address`);\n      hasError = true;\n    }\n\n    if (!descriptionValue.trim()) {\n      // setDescriptionError('Comment cannot be empty');\n      toast.error(`Comment cannot be empty`);\n      hasError = true;\n    }\n\n    if (!hasError) {\n      dispatch(\n        sendNeedHelpLetter({\n          email: emailValue,\n          comment: descriptionValue,\n        })\n      );\n      openModal();\n    }\n  };\n  return (\n    <div>\n      <h3 className={css.modalTitle}>Need help</h3>\n      <form className={css.inputForm}>\n        <input\n          type=\"text\"\n          placeholder=\"Email address\"\n          value={emailValue}\n          onChange={event => setEmailValue(event.target.value)}\n          className={css.inputCardTitle}\n        />\n\n        <textarea\n          type=\"text\"\n          placeholder=\"Comment\"\n          value={descriptionValue}\n          onChange={event => setDescriptionValue(event.target.value)}\n          className={css.inputCardDescription}\n        />\n\n        <button\n          type=\"submit\"\n          onClick={handleSubmit}\n          className={css.inputAddBtn}\n        >\n          Send\n        </button>\n      </form>\n    </div>\n  );\n}\n","import { Icon } from '../Svg/Icon';\nimport styles from './NewBoard.module.css';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { updateBoard } from 'redux/boards/boardsOperations';\nimport { useNavigate } from 'react-router';\nimport { useShownBoard } from 'hooks/useShownBoard';\n\nimport noBack from '../../img/background_list_icons/no-background.jpg';\nimport cappodocia from '../../img/background_list_icons/cappodocia.jpg';\nimport baloon from '../../img/background_list_icons/baloon.jpg';\nimport clouds from '../../img/background_list_icons/clouds.jpg';\nimport fullMoon from '../../img/background_list_icons/full-moon.jpg';\nimport halfMoon from '../../img/background_list_icons/half-moon.jpg';\nimport magnolia from '../../img/background_list_icons/magnolia.jpg';\nimport mountains from '../../img/background_list_icons/mountains.jpg';\nimport nightTrailer from '../../img/background_list_icons/night-trailer.jpg';\nimport palmLeaves from '../../img/background_list_icons/palm-leaves.jpg';\nimport rockyBeach from '../../img/background_list_icons/rocky-beach.jpg';\nimport sakura from '../../img/background_list_icons/sakura.jpg';\nimport sea from '../../img/background_list_icons/sea.jpg';\nimport starrySky from '../../img/background_list_icons/starry-sky.jpg';\nimport violetCircle from '../../img/background_list_icons/violet-circle.jpg';\nimport yacht from '../../img/background_list_icons/yacht.jpg';\n\nconst EditBoard = ({ openModal }) => {\n  const { _id, title, icon, background } = useShownBoard();\n  const [icons, setIcons] = useState(icon);\n  const [backgroundIcon, setBackground] = useState(background);\n  const [titleIc, setTitle] = useState(title);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const getTitle = event => {\n    setTitle(event.target.value);\n  };\n\n  const closeModal = event => {\n    openModal();\n  };\n\n  const getIcon = event => {\n    setIcons(event.currentTarget.dataset.source);\n  };\n\n  const getBack = event => {\n    setBackground(event.currentTarget.dataset.source);\n  };\n\n  const editBoardObject = {\n    _id,\n    newBoardData: {\n      title: titleIc,\n      icon: icons,\n      background: backgroundIcon,\n    },\n  };\n\n  const editBoardFunc = () => {\n    dispatch(updateBoard(editBoardObject));\n    closeModal();\n    navigate(`${titleIc}`);\n  };\n\n  return (\n    <div className={styles.divCard}>\n      <h2 className={styles.textNew}>Edit board</h2>\n      <input\n        className={styles.titleInput}\n        type=\"text\"\n        placeholder=\"Title\"\n        value={titleIc}\n        onChange={getTitle}\n      />\n      <h3 className={styles.textIcons}>Icons</h3>\n      <ul className={styles.listDarkIcons}>\n        <li>\n          <button\n            data-source=\"project\"\n            className={styles.buttonIcons}\n            onClick={getIcon}\n          >\n            <Icon\n              id={'project'}\n              className={\n                icons === 'project' ? styles.darkIcons : styles.serIcons\n              }\n            ></Icon>\n          </button>\n        </li>\n        <li>\n          <button onClick={getIcon} data-source=\"star\">\n            <Icon\n              id={'star'}\n              className={icons === 'star' ? styles.darkIcons : styles.serIcons}\n            ></Icon>\n          </button>\n        </li>\n        <li>\n          <button onClick={getIcon} data-source=\"loading\">\n            <Icon\n              id={'loading'}\n              className={\n                icons === 'loading' ? styles.darkIcons : styles.serIcons\n              }\n            ></Icon>\n          </button>\n        </li>\n        <li>\n          <button onClick={getIcon} data-source=\"puzzle-piece\">\n            <Icon\n              id={'puzzle-piece'}\n              className={\n                icons === 'puzzle-piece' ? styles.darkIcons : styles.serIcons\n              }\n            ></Icon>\n          </button>\n        </li>\n        <li>\n          <button onClick={getIcon} data-source=\"container\">\n            <Icon\n              id={'container'}\n              className={\n                icons === 'container' ? styles.darkIcons : styles.serIcons\n              }\n            ></Icon>\n          </button>\n        </li>\n        <li>\n          <button onClick={getIcon} data-source=\"lightning\">\n            <Icon\n              id={'lightning'}\n              className={\n                icons === 'lightning' ? styles.darkIcons : styles.serIcons\n              }\n            ></Icon>\n          </button>\n        </li>\n        <li>\n          <button onClick={getIcon} data-source=\"colors\">\n            <Icon\n              id={'colors'}\n              className={\n                icons === 'colors' ? styles.darkIcons : styles.serIcons\n              }\n            ></Icon>\n          </button>\n        </li>\n        <li>\n          <button onClick={getIcon} data-source=\"hexagon\">\n            <Icon\n              id={'hexagon'}\n              className={\n                icons === 'hexagon' ? styles.darkIcons : styles.serIcons\n              }\n            ></Icon>\n          </button>\n        </li>\n      </ul>\n      <h3 className={styles.textBackground}>Background</h3>\n      <ul className={styles.listColorIcons}>\n        <li\n          className={\n            backgroundIcon === 'no-background'\n              ? styles.listItemActive\n              : styles.listItem\n          }\n        >\n          <input\n            type=\"radio\"\n            name=\"backs\"\n            data-source=\"no-background\"\n            className={styles.inputBack}\n            onClick={getBack}\n          />\n          <img src={noBack} alt=\"noback\" className={styles.img_back} />\n        </li>\n        <li\n          className={\n            backgroundIcon === 'magnolia'\n              ? styles.listItemActive\n              : styles.listItem\n          }\n        >\n          <input\n            type=\"radio\"\n            name=\"backs\"\n            className={styles.inputBack}\n            data-source=\"magnolia\"\n            onClick={getBack}\n          />\n          <img src={magnolia} alt=\"magnolia\" className={styles.img_back} />\n        </li>\n        <li\n          className={\n            backgroundIcon === 'starry-sky'\n              ? styles.listItemActive\n              : styles.listItem\n          }\n        >\n          <input\n            type=\"radio\"\n            name=\"backs\"\n            className={styles.inputBack}\n            data-source=\"starry-sky\"\n            onClick={getBack}\n          />\n          <img src={starrySky} alt=\"starrySky\" className={styles.img_back} />\n        </li>\n        <li\n          className={\n            backgroundIcon === 'sakura'\n              ? styles.listItemActive\n              : styles.listItem\n          }\n        >\n          <input\n            type=\"radio\"\n            name=\"backs\"\n            className={styles.inputBack}\n            data-source=\"sakura\"\n            onClick={getBack}\n          />\n          <img src={sakura} alt=\"sakura\" className={styles.img_back} />\n        </li>\n        <li\n          className={\n            backgroundIcon === 'half-moon'\n              ? styles.listItemActive\n              : styles.listItem\n          }\n        >\n          <input\n            type=\"radio\"\n            name=\"backs\"\n            className={styles.inputBack}\n            data-source=\"half-moon\"\n            onClick={getBack}\n          />\n          <img src={halfMoon} alt=\"half-moon\" className={styles.img_back} />\n        </li>\n        <li\n          className={\n            backgroundIcon === 'palm-leaves'\n              ? styles.listItemActive\n              : styles.listItem\n          }\n        >\n          <input\n            type=\"radio\"\n            name=\"backs\"\n            className={styles.inputBack}\n            data-source=\"palm-leaves\"\n            onClick={getBack}\n          />\n          <img src={palmLeaves} alt=\"palm-leaves\" className={styles.img_back} />\n        </li>\n        <li\n          className={\n            backgroundIcon === 'clouds'\n              ? styles.listItemActive\n              : styles.listItem\n          }\n        >\n          <input\n            type=\"radio\"\n            name=\"backs\"\n            className={styles.inputBack}\n            data-source=\"clouds\"\n            onClick={getBack}\n          />\n          <img src={clouds} alt=\"clouds\" className={styles.img_back} />\n        </li>\n        <li\n          className={\n            backgroundIcon === 'rocky-beach'\n              ? styles.listItemActive\n              : styles.listItem\n          }\n        >\n          <input\n            type=\"radio\"\n            name=\"backs\"\n            className={styles.inputBack}\n            data-source=\"rocky-beach\"\n            onClick={getBack}\n          />\n          <img src={rockyBeach} alt=\"rocky-beach\" className={styles.img_back} />\n        </li>\n        <li\n          className={\n            backgroundIcon === 'violet-circle'\n              ? styles.listItemActive\n              : styles.listItem\n          }\n        >\n          <input\n            type=\"radio\"\n            name=\"backs\"\n            className={styles.inputBack}\n            data-source=\"violet-circle\"\n            onClick={getBack}\n          />\n          <img\n            src={violetCircle}\n            alt=\"violet-circle\"\n            className={styles.img_back}\n          />\n        </li>\n        <li\n          className={\n            backgroundIcon === 'full-moon'\n              ? styles.listItemActive\n              : styles.listItem\n          }\n        >\n          <input\n            type=\"radio\"\n            name=\"backs\"\n            className={styles.inputBack}\n            data-source=\"full-moon\"\n            onClick={getBack}\n          />\n          <img src={fullMoon} alt=\"full-moon\" className={styles.img_back} />\n        </li>\n        <li\n          className={\n            backgroundIcon === 'yacht' ? styles.listItemActive : styles.listItem\n          }\n        >\n          <input\n            type=\"radio\"\n            name=\"backs\"\n            className={styles.inputBack}\n            data-source=\"yacht\"\n            onClick={getBack}\n          />\n          <img src={yacht} alt=\"yacht\" className={styles.img_back} />\n        </li>\n        <li\n          className={\n            backgroundIcon === 'baloon'\n              ? styles.listItemActive\n              : styles.listItem\n          }\n        >\n          <input\n            type=\"radio\"\n            name=\"backs\"\n            className={styles.inputBack}\n            data-source=\"baloon\"\n            onClick={getBack}\n          />\n          <img src={baloon} alt=\"baloon\" className={styles.img_back} />\n        </li>\n        <li\n          className={\n            backgroundIcon === 'mountains'\n              ? styles.listItemActive\n              : styles.listItem\n          }\n        >\n          <input\n            type=\"radio\"\n            name=\"backs\"\n            className={styles.inputBack}\n            data-source=\"mountains\"\n            onClick={getBack}\n          />\n          <img src={mountains} alt=\"mountains\" className={styles.img_back} />\n        </li>\n        <li\n          className={\n            backgroundIcon === 'sea' ? styles.listItemActive : styles.listItem\n          }\n        >\n          <input\n            type=\"radio\"\n            name=\"backs\"\n            className={styles.inputBack}\n            data-source=\"sea\"\n            onClick={getBack}\n          />\n          <img src={sea} alt=\"sea\" className={styles.img_back} />\n        </li>\n        <li\n          className={\n            backgroundIcon === 'cappodocia'\n              ? styles.listItemActive\n              : styles.listItem\n          }\n        >\n          <input\n            type=\"radio\"\n            name=\"backs\"\n            className={styles.inputBack}\n            data-source=\"cappodocia\"\n            onClick={getBack}\n          />\n          <img src={cappodocia} alt=\"cappodocia\" className={styles.img_back} />\n        </li>\n        <li\n          className={\n            backgroundIcon === 'night-trailer'\n              ? styles.listItemActive\n              : styles.listItem\n          }\n        >\n          <input\n            type=\"radio\"\n            name=\"backs\"\n            className={styles.inputBack}\n            data-source=\"night-trailer\"\n            onClick={getBack}\n          />\n          <img\n            src={nightTrailer}\n            alt=\"night-trailer\"\n            className={styles.img_back}\n          />\n        </li>\n      </ul>\n      <button className={styles.mainButton} onClick={editBoardFunc}>\n        <div className={styles.plusBtnZaglushka}>\n          <Icon id={'plus'} className={styles.plusIcon}></Icon>\n        </div>\n        Edit\n      </button>\n    </div>\n  );\n};\n\nexport default EditBoard;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Link, NavLink, useNavigate } from 'react-router-dom';\nimport { createPortal } from 'react-dom';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  deleteBoard,\n  getAllBoards,\n  getBoardById,\n} from '../../redux/boards/boardsOperations';\nimport { logOutUser } from 'redux/auth/operations';\nimport { useBoardsList } from 'hooks/useBoardsList';\nimport { useUserData } from 'hooks/useUserData';\n\nimport css from './Sidebar.module.css';\nimport sprite from '../../img/svg/sprite-icon.svg';\nimport Modal from '../Modal/index.js';\nimport NeedHelp from '../Needhelp/NeedHelp';\nimport NewBoard from '../NewEditBoard/NewBoard';\nimport EditBoard from 'components/NewEditBoard/EditBoard';\n\nconst mobMenu = document.querySelector('#modal-root');\n\nconst Sidebar = ({ closeSidebar, isOpenMenu }) => {\n  const navigate = useNavigate();\n  const menuRef = useRef(null);\n\n  const [openNeedHelpModal, setOpenNeedHelpModal] = useState(false);\n  const [openNewBoardModal, setOpenNewBoardModal] = useState(false);\n  const [openEditBoardModal, setOpenEditBoardModal] = useState(false);\n  const [isWideScreen, setIsWideScreen] = useState(window.outerWidth >= 1440);\n\n  const [containerHeight, setContainerHeight] = useState(0);\n\n  const dispatch = useDispatch();\n\n  const boards = useBoardsList();\n\n  useEffect(() => {\n    const handleResize = () => {\n      const windowWidth = window.outerWidth;\n      if (windowWidth >= 1440) {\n        setIsWideScreen(true);\n      } else {\n        setIsWideScreen(false);\n      }\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [closeSidebar]);\n\n  useEffect(() => {\n    dispatch(getAllBoards());\n  }, [dispatch]);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setContainerHeight(window.innerHeight);\n    };\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const preventPropagation = event => {\n    event.stopPropagation();\n    event.preventDefault();\n  };\n\n  const handleCreateBoard = () => {\n    setOpenNewBoardModal(true);\n  };\n\n  const handleNeedHelp = () => {\n    setOpenNeedHelpModal(true);\n  };\n\n  const handleEditBoard = event => {\n    preventPropagation(event);\n    setOpenEditBoardModal(true);\n  };\n\n  const handleLogout = () => {\n    dispatch(logOutUser());\n    navigate('/');\n  };\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      menuRef.current.classList.toggle(css.close);\n      setTimeout(() => {\n        closeSidebar();\n      }, 300);\n    }\n  };\n\n  const { userTheme } = useUserData();\n\n  return isWideScreen ? (\n    <div className={`${css.sidebar} ${isOpenMenu ? css.open : ''}`}>\n      {openNeedHelpModal && (\n        <Modal\n          children={<NeedHelp openModal={setOpenNeedHelpModal} />}\n          openModal={setOpenNeedHelpModal}\n        />\n      )}\n      {openNewBoardModal && (\n        <Modal openModal={setOpenNewBoardModal}>\n          <NewBoard openModal={setOpenNewBoardModal} />\n        </Modal>\n      )}\n      {openEditBoardModal && (\n        <Modal openModal={setOpenEditBoardModal}>\n          <EditBoard openModal={setOpenEditBoardModal}></EditBoard>\n        </Modal>\n      )}\n      <div>\n        <Link to=\"/home\" className={css.logo}>\n          <svg width=\"32\" height=\"32\" className={css.logoIcon}>\n            <use xlinkHref={`${sprite}#logo`} />\n          </svg>\n          <p className={css.logoText}>TaskPro</p>\n        </Link>\n\n        <div className={css.myBoards}>\n          <p className={css.myBoardsText}>My Boards</p>\n          <div className={css.createBoardSection}>\n            <p className={css.createBoardText}>Create a new board</p>\n            <button\n              className={css.createBoardButton}\n              onClick={handleCreateBoard}\n              aria-label=\"Add board\"\n            >\n              <svg width=\"20\" height=\"20\" className={css.addIcon}>\n                <use xlinkHref={`${sprite}#plus`} />\n              </svg>\n            </button>\n          </div>\n          <ul\n            className={css.boardsList}\n            style={{ maxHeight: `${containerHeight - 650}px` }}\n          >\n            {boards.map(({ _id, title, icon }) => (\n              <li key={_id}>\n                <NavLink\n                  to={`${title}`}\n                  className={({ isActive }) =>\n                    isActive ? css.active : css.boardsItem\n                  }\n                  onClick={() => {\n                    dispatch(getBoardById(_id));\n                  }}\n                >\n                  <div className={css.boardTitle}>\n                    <svg width=\"18\" height=\"18\" className={css.boardIcon}>\n                      <use xlinkHref={`${sprite}#${icon}`} />\n                    </svg>\n                    <p className={css.boardName}>{title}</p>\n                  </div>\n                  <div className={css.boardTools}>\n                    <button onClick={handleEditBoard}>\n                      <svg width=\"16\" height=\"16\" className={css.editBoardIcon}>\n                        <use xlinkHref={`${sprite}#pencil`} />\n                      </svg>\n                    </button>\n\n                    <button\n                      onClick={event => {\n                        preventPropagation(event);\n                        dispatch(deleteBoard(_id));\n                        navigate('/home');\n                      }}\n                    >\n                      <svg width=\"16\" height=\"16\" className={css.editBoardIcon}>\n                        <use xlinkHref={`${sprite}#trash`} />\n                      </svg>\n                    </button>\n                  </div>\n                </NavLink>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n      <div>\n        <div className={css.needHelpSection}>\n          <div className={css.needHelpImage}></div>\n          <p className={css.needHelpText}>\n            If you need help with{' '}\n            <Link to=\"/home\" className={css.taskPro}>\n              TaskPro\n            </Link>\n            , check out our support resources or reach out to our customer\n            support team.\n          </p>\n          <button className={css.needHelpButton} onClick={handleNeedHelp}>\n            <svg width=\"20\" height=\"20\" className={css.helpIcon}>\n              <use xlinkHref={`${sprite}#help_circle`} />\n            </svg>\n            <p>Need help?</p>\n          </button>\n        </div>\n        <button className={css.logOutButton} onClick={handleLogout}>\n          <svg width=\"32\" height=\"32\" className={css.logoutIcon}>\n            <use xlinkHref={`${sprite}#log-out`} />\n          </svg>\n          <p>Log out</p>\n        </button>\n      </div>\n    </div>\n  ) : (\n    createPortal(\n      <div\n        className={css.backdrop}\n        onClick={handleBackdropClick}\n        data-theme={userTheme}\n      >\n        <div\n          ref={menuRef}\n          className={`${css.sidebar} ${isOpenMenu ? css.open : ''}`}\n        >\n          {openNeedHelpModal && (\n            <Modal children={<NeedHelp />} openModal={setOpenNeedHelpModal} />\n          )}\n          {openNewBoardModal && (\n            <Modal openModal={setOpenNewBoardModal}>\n              <NewBoard openModal={setOpenNewBoardModal} />\n            </Modal>\n          )}\n          {openEditBoardModal && (\n            <Modal openModal={setOpenEditBoardModal}>\n              <EditBoard openModal={setOpenEditBoardModal}></EditBoard>\n            </Modal>\n          )}\n\n          <div>\n            <Link to=\"/home\" className={css.logo}>\n              <svg width=\"32\" height=\"32\" className={css.logoIcon}>\n                <use xlinkHref={`${sprite}#logo`} />\n              </svg>\n              <p className={css.logoText}>TaskPro</p>\n            </Link>\n\n            <div className={css.myBoards}>\n              <p className={css.myBoardsText}>My Boards</p>\n              <div className={css.createBoardSection}>\n                <p className={css.createBoardText}>Create a new board</p>\n                <button\n                  className={css.createBoardButton}\n                  onClick={handleCreateBoard}\n                >\n                  <svg width=\"20\" height=\"20\" className={css.addIcon}>\n                    <use xlinkHref={`${sprite}#plus`} />\n                  </svg>\n                </button>\n              </div>\n              <ul className={css.boardsList}>\n                {boards.map(({ _id, title, icon }) => (\n                  <li key={_id}>\n                    <NavLink\n                      to={`${title}`}\n                      className={({ isActive }) =>\n                        isActive ? css.active : css.boardsItem\n                      }\n                      onClick={() => {\n                        dispatch(getBoardById(_id));\n                      }}\n                    >\n                      <div className={css.boardTitle}>\n                        <svg width=\"18\" height=\"18\" className={css.boardIcon}>\n                          <use xlinkHref={`${sprite}#${icon}`} />\n                        </svg>\n                        <p className={css.boardName}>{title}</p>\n                      </div>\n                      <div className={css.boardTools}>\n                        <button onClick={handleEditBoard}>\n                          <svg\n                            width=\"16\"\n                            height=\"16\"\n                            className={css.editBoardIcon}\n                          >\n                            <use xlinkHref={`${sprite}#pencil`} />\n                          </svg>\n                        </button>\n\n                        <button\n                          onClick={event => {\n                            preventPropagation(event);\n                            dispatch(deleteBoard(_id));\n                          }}\n                        >\n                          <svg\n                            width=\"16\"\n                            height=\"16\"\n                            className={css.editBoardIcon}\n                          >\n                            <use xlinkHref={`${sprite}#trash`} />\n                          </svg>\n                        </button>\n                      </div>\n                    </NavLink>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n\n          <div>\n            <div className={css.needHelpSection}>\n              <div className={css.needHelpImage}></div>\n              <p className={css.needHelpText}>\n                If you need help with{' '}\n                <Link to=\"/home\" className={css.taskPro}>\n                  TaskPro\n                </Link>\n                , check out our support resources or reach out to our customer\n                support team.\n              </p>\n              <button className={css.needHelpButton} onClick={handleNeedHelp}>\n                <svg width=\"20\" height=\"20\" className={css.helpIcon}>\n                  <use xlinkHref={`${sprite}#help_circle`} />\n                </svg>\n                <p>Need help?</p>\n              </button>\n            </div>\n            <button className={css.logOutButton} onClick={handleLogout}>\n              <svg width=\"32\" height=\"32\" className={css.logoutIcon}>\n                <use xlinkHref={`${sprite}#log-out`} />\n              </svg>\n              <p>Log out</p>\n            </button>\n          </div>\n        </div>\n      </div>,\n      mobMenu\n    )\n  );\n};\n\nexport default Sidebar;\n","import { useSelector } from 'react-redux';\nimport { selectAllBoardsList } from 'redux/boards/boardsSelectors';\n\nexport const useBoardsList = () => useSelector(selectAllBoardsList);\n","import React, { useState } from 'react';\nimport MediaQuery from 'react-responsive';\nimport css from './HomePage.module.css';\n\nimport Header from 'components/Header';\nimport Sidebar from 'components/Sidebar';\nimport { useUserData } from 'hooks/useUserData';\n\nimport ScreensPage from '../ScreensPage/ScreensPage';\n\nconst HomePage = () => {\n  const [isOpenMenu, setIsOpenMenu] = useState(false);\n  const { userTheme } = useUserData();\n\n  const toggleIsOpenMenu = () => {\n    setIsOpenMenu(!isOpenMenu);\n  };\n\n  return (\n    <div className={css.test} data-theme={userTheme}>\n      <div className={css.navigate}>\n        {isOpenMenu && (\n          <Sidebar\n            closeSidebar={() => setIsOpenMenu(false)}\n            isOpenMenu={isOpenMenu}\n          />\n        )}\n        <MediaQuery minWidth={1440}>{!isOpenMenu && <Sidebar />}</MediaQuery>\n        <div className={css.homePage_wrap}>\n          <Header handlerMenu={toggleIsOpenMenu} />\n\n          <ScreensPage />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import * as yup from 'yup';\n\nexport const loginFormSchema = yup.object().shape({\n  email: yup\n    .string()\n    .required('Email is required')\n    .matches(\n      /^[a-zA-Z0-9!@#$%^&*()_+{}[\\]:;<>,.?~-]+$/,\n      'Invalid email format'\n    )\n    .trim(),\n\n  password: yup\n    .string()\n    .min(8, 'Password should be at least 8 characters')\n    .max(64, 'Password is too long')\n    .matches(\n      /^[A-Za-z0-9!@#$%^&*()_+=\\-[\\]{}|\\\\:;\"'<>,.?/~`]+$/,\n      'Invalid password format'\n    )\n    .required('Password is required'),\n});","import * as yup from 'yup';\n\nexport const registerFormSchema = yup\n  .object()\n  .shape({\n    name: yup\n      .string()\n      .required('Name is required')\n      .min(2, 'Username must be at least 2 characters')\n      .max(32, 'Username can be at most 32 characters')\n      .matches(\n        /^[a-zA-Z0-9!@#$%^&*()_+{}[\\]:;<>,.?~-]+$/,\n        'Invalid name format'\n      )\n      .trim(),\n\n    email: yup\n      .string()\n      .required('Email is required')\n      .matches(\n        /^([A-Za-z0-9_-]+.)*[A-Za-z0-9_-]+@[a-z0-9_-]+(.[a-z0-9_-]+)*.[a-z]{2,6}$/,\n        'Invalid email format'\n      )\n      .trim(),\n    password: yup\n      .string()\n      .min(8, 'Password should be at least 8 characters')\n      .max(64, 'Password is too long')\n      .matches(\n        /^[A-Za-z0-9!@#$%^&*()_+=\\-[\\]{}|\\\\:;\"'<>,.?/~`]+$/,\n        'Invalid password format'\n      )\n      .required('Password is required'),\n  })\n  .required();\n","import * as yup from 'yup';\n\nexport const editProfileSchema = yup\n  .object()\n  .shape({\n    name: yup\n      .string()\n      .required('Name is required')\n      .min(2, 'Username must be at least 2 characters')\n      .max(32, 'Username can be at most 32 characters')\n      .matches(\n        // /^[a-zA-Z0-9!@#$%^&*()_+{}\\[\\]:;<>,.?~-]+$/,\n        /^[a-zA-Z0-9!@#$%^&*()_+{}[\\]:;<>,.?~-]+$/,\n        'Invalid name format'\n      )\n      .trim(),\n\n    email: yup\n      .string()\n      .required('Email is required')\n      .matches(\n        /^([A-Za-z0-9_-]+.)*[A-Za-z0-9_-]+@[a-z0-9_-]+(.[a-z0-9_-]+)*.[a-z]{2,6}$/,\n        'Invalid email format'\n      )\n      .trim(),\n    password: yup\n      .string()\n      .min(8, 'Password should be at least 8 characters')\n      .max(64, 'Password is too long')\n      .matches(\n        /^[A-Za-z0-9!@#$%^&*()_+=\\-[\\]{}|\\\\:;\"'<>,.?/~`]+$/,\n        'Invalid password format'\n      )\n  })\n  .required();\n"],"names":["Select","option","placeholder","useState","isOpen","setIsOpen","userTheme","useUserData","dispatch","useDispatch","ref","useRef","useEffect","handleClick","evt","current","contains","target","document","addEventListener","removeEventListener","handlerSelectedOption","newTheme","textContent","toLowerCase","changeTheme","className","css","onClick","width","height","href","icon","map","el","index","handlerClick","name","avatarURL","Button","src","alt","onClose","user","avatar","setAvatar","localAvatar","setLocalAvatar","avatarUploaded","setAvatarUploaded","passwordVisible","setPasswordVisible","togglePasswordVisibility","handleChangeAvatar","event","files","formData","FormData","URL","createObjectURL","append","initialValues","email","password","validationSchema","editProfileSchema","onSubmit","updatedProfile","set","type","updateProfile","props","onChange","xlinkHref","sprite","value","values","handleChange","component","handlerMenu","modalIsOpen","setModalIsOpen","handlerModalIsOpen","label","Modal","openModal","NeedHelp","emailValue","setEmailValue","descriptionValue","setDescriptionValue","e","preventDefault","hasError","test","toast","trim","sendNeedHelpLetter","comment","useShownBoard","_id","title","background","icons","setIcons","backgroundIcon","setBackground","titleIc","setTitle","navigate","useNavigate","getIcon","currentTarget","dataset","source","getBack","editBoardObject","newBoardData","styles","Icon","id","noBack","magnolia","starrySky","sakura","halfMoon","palmLeaves","clouds","rockyBeach","violetCircle","fullMoon","yacht","baloon","mountains","sea","cappodocia","nightTrailer","updateBoard","mobMenu","querySelector","closeSidebar","isOpenMenu","menuRef","openNeedHelpModal","setOpenNeedHelpModal","openNewBoardModal","setOpenNewBoardModal","openEditBoardModal","setOpenEditBoardModal","window","outerWidth","isWideScreen","setIsWideScreen","containerHeight","setContainerHeight","boards","useSelector","selectAllBoardsList","handleResize","windowWidth","getAllBoards","innerHeight","preventPropagation","stopPropagation","handleCreateBoard","handleNeedHelp","handleEditBoard","handleLogout","logOutUser","children","NewBoard","to","style","maxHeight","isActive","getBoardById","deleteBoard","createPortal","classList","toggle","setTimeout","setIsOpenMenu","minWidth","ScreensPage","loginFormSchema","yup","shape","required","matches","min","max","registerFormSchema"],"sourceRoot":""}